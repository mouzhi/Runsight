/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


import Foundation

public struct FIT {
    private init() {}
    
    public static let PROFILE_VERSION: UInt16 = ((PROFILE_MAJOR_VERSION * PROFILE_VERSION_SCALE) + PROFILE_MINOR_VERSION);
    public static let PROFILE_VERSION_SCALE: UInt16 = 1000
    public static let PROFILE_MAJOR_VERSION: UInt16 = 21
    public static let PROFILE_MINOR_VERSION: UInt16 = 171

    public struct SUBFIELD_INDEX {
        private init() {}
        public static let ACTIVE_SUBFIELD: UInt16 = 65534
        public static let MAIN_FIELD: UInt16 = 65535
    }
    
    internal static let FIELD_DEFAULT_SCALE: Float64 = 1.0
    internal static let FIELD_DEFAULT_OFFSET: Float64 = 0.0
    
    internal static let MAX_FIELD_SIZE = 255
    internal static let STRING_MAX_BYTE_COUNT = MAX_FIELD_SIZE - 1 // Reserve 1 byte for the null terminator that is appended to all strings during encoding

    internal static let COMPRESSED_HEADER_MASK: UInt8 = 0x80
    internal static let MESG_DEFINITION_MASK: UInt8 = 0x40
    internal static let MESG_HEADER_MASK: UInt8 = 0x00
    internal static let CRC_SIZE: UInt8 = 2
    internal static let NUM_LOCAL_MESG_DEFS: Int = 16
    internal static let HDR_TYPE_MASK: UInt8 = 0x0F
    internal static let HDR_TYPE_DEF_BIT: UInt8 = 0x40
    internal static let DEV_DATA_MASK: UInt8 = 0x20
    internal static let LOCAL_MESG_NUM_MASK: UInt8 = 0x0F
    internal static let HEADER_WITH_CRC_SIZE: UInt8 = 14
    internal static let HEADER_WITHOUT_CRC_SIZE: UInt8 = 12
}

public enum ProtocolVersion: UInt8 {
    case invalid = 0x00
    case v10 = 0x10
    case v20 = 0x20
}

public enum Endianness: UInt8 {
    case little = 0
    case big = 1
}

public enum LocalMesgNum: UInt8 {
    case zero = 0
    case one = 1
    case two = 2
    case three = 3
    case four = 4
    case five = 5
    case six = 6
    case seven = 7
    case eight = 8
    case nine = 9
    case ten = 10
    case eleven = 11
    case twelve = 12
    case thirteen = 13
    case fourteen = 14
    case fifteen = 15
    
    func next() -> LocalMesgNum {
        return LocalMesgNum(rawValue: self.rawValue + 1) ?? .zero
    }
}
