/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


import Foundation
public struct Profile {
    
    public enum ProfileType: CaseIterable
    {
        // Base Types
        case `enum`
        case sint8
        case uint8
        case sint16
        case uint16
        case sint32
        case uint32
        case string
        case float32
        case float64
        case uint8z
        case uint16z
        case uint32z
        case byte
        case sint64
        case uint64
        case uint64z
        case bool
		case file
		case mesgNum
		case checksum
		case fileFlags
		case mesgCount
		case dateTime
		case localDateTime
		case messageIndex
		case deviceIndex
		case gender
		case language
		case languageBits0
		case languageBits1
		case languageBits2
		case languageBits3
		case languageBits4
		case timeZone
		case displayMeasure
		case displayHeart
		case displayPower
		case displayPosition
		case `switch`
		case sport
		case sportBits0
		case sportBits1
		case sportBits2
		case sportBits3
		case sportBits4
		case sportBits5
		case sportBits6
		case subSport
		case sportEvent
		case activity
		case intensity
		case sessionTrigger
		case autolapTrigger
		case lapTrigger
		case timeMode
		case backlightMode
		case dateMode
		case backlightTimeout
		case event
		case eventType
		case timerTrigger
		case fitnessEquipmentState
		case tone
		case autoscroll
		case activityClass
		case hrZoneCalc
		case pwrZoneCalc
		case wktStepDuration
		case wktStepTarget
		case goal
		case goalRecurrence
		case goalSource
		case schedule
		case coursePoint
		case manufacturer
		case garminProduct
		case antplusDeviceType
		case antNetwork
		case workoutCapabilities
		case batteryStatus
		case hrType
		case courseCapabilities
		case weight
		case workoutHr
		case workoutPower
		case bpStatus
		case userLocalId
		case swimStroke
		case activityType
		case activitySubtype
		case activityLevel
		case side
		case leftRightBalance
		case leftRightBalance100
		case lengthType
		case dayOfWeek
		case connectivityCapabilities
		case weatherReport
		case weatherStatus
		case weatherSeverity
		case weatherSevereType
		case timeIntoDay
		case localtimeIntoDay
		case strokeType
		case bodyLocation
		case segmentLapStatus
		case segmentLeaderboardType
		case segmentDeleteStatus
		case segmentSelectionType
		case sourceType
		case localDeviceType
		case bleDeviceType
		case antChannelId
		case displayOrientation
		case workoutEquipment
		case watchfaceMode
		case digitalWatchfaceLayout
		case analogWatchfaceLayout
		case riderPositionType
		case powerPhaseType
		case cameraEventType
		case sensorType
		case bikeLightNetworkConfigType
		case commTimeoutType
		case cameraOrientationType
		case attitudeStage
		case attitudeValidity
		case autoSyncFrequency
		case exdLayout
		case exdDisplayType
		case exdDataUnits
		case exdQualifiers
		case exdDescriptors
		case autoActivityDetect
		case supportedExdScreenLayouts
		case fitBaseType
		case turnType
		case bikeLightBeamAngleMode
		case fitBaseUnit
		case setType
		case maxMetCategory
		case exerciseCategory
		case benchPressExerciseName
		case calfRaiseExerciseName
		case cardioExerciseName
		case carryExerciseName
		case chopExerciseName
		case coreExerciseName
		case crunchExerciseName
		case curlExerciseName
		case deadliftExerciseName
		case flyeExerciseName
		case hipRaiseExerciseName
		case hipStabilityExerciseName
		case hipSwingExerciseName
		case hyperextensionExerciseName
		case lateralRaiseExerciseName
		case legCurlExerciseName
		case legRaiseExerciseName
		case lungeExerciseName
		case olympicLiftExerciseName
		case plankExerciseName
		case plyoExerciseName
		case pullUpExerciseName
		case pushUpExerciseName
		case rowExerciseName
		case shoulderPressExerciseName
		case shoulderStabilityExerciseName
		case shrugExerciseName
		case sitUpExerciseName
		case squatExerciseName
		case totalBodyExerciseName
		case moveExerciseName
		case poseExerciseName
		case tricepsExtensionExerciseName
		case warmUpExerciseName
		case runExerciseName
		case bikeExerciseName
		case bandedExercisesExerciseName
		case battleRopeExerciseName
		case ellipticalExerciseName
		case floorClimbExerciseName
		case indoorBikeExerciseName
		case indoorRowExerciseName
		case ladderExerciseName
		case sandbagExerciseName
		case sledExerciseName
		case sledgeHammerExerciseName
		case stairStepperExerciseName
		case suspensionExerciseName
		case tireExerciseName
		case bikeOutdoorExerciseName
		case runIndoorExerciseName
		case waterType
		case tissueModelType
		case diveGasStatus
		case diveAlert
		case diveAlarmType
		case diveBacklightMode
		case sleepLevel
		case spo2MeasurementType
		case ccrSetpointSwitchMode
		case diveGasMode
		case projectileType
		case faveroProduct
		case splitType
		case climbProEvent
		case gasConsumptionRateType
		case tapSensitivity
		case radarThreatLevelType
		case maxMetSpeedSource
		case maxMetHeartRateSource
		case hrvStatus
		case noFlyTimeMode
    }
    
    public typealias MesgNumber = UInt16
    public struct MesgNum {
	    public static let fileId: MesgNumber = 0 // Must be first message in file.
	    public static let fileCreator: MesgNumber = 49
	    public static let timestampCorrelation: MesgNumber = 162
	    public static let software: MesgNumber = 35
	    public static let slaveDevice: MesgNumber = 106
	    public static let capabilities: MesgNumber = 1
	    public static let fileCapabilities: MesgNumber = 37
	    public static let mesgCapabilities: MesgNumber = 38
	    public static let fieldCapabilities: MesgNumber = 39
	    public static let deviceSettings: MesgNumber = 2
	    public static let userProfile: MesgNumber = 3
	    public static let hrmProfile: MesgNumber = 4
	    public static let sdmProfile: MesgNumber = 5
	    public static let bikeProfile: MesgNumber = 6
	    public static let connectivity: MesgNumber = 127
	    public static let watchfaceSettings: MesgNumber = 159
	    public static let ohrSettings: MesgNumber = 188
	    public static let timeInZone: MesgNumber = 216
	    public static let zonesTarget: MesgNumber = 7
	    public static let sport: MesgNumber = 12
	    public static let hrZone: MesgNumber = 8
	    public static let speedZone: MesgNumber = 53
	    public static let cadenceZone: MesgNumber = 131
	    public static let powerZone: MesgNumber = 9
	    public static let metZone: MesgNumber = 10
	    public static let trainingSettings: MesgNumber = 13
	    public static let diveSettings: MesgNumber = 258
	    public static let diveAlarm: MesgNumber = 262
	    public static let diveApneaAlarm: MesgNumber = 393
	    public static let diveGas: MesgNumber = 259
	    public static let goal: MesgNumber = 15
	    public static let activity: MesgNumber = 34
	    public static let session: MesgNumber = 18
	    public static let lap: MesgNumber = 19
	    public static let length: MesgNumber = 101
	    public static let record: MesgNumber = 20
	    public static let event: MesgNumber = 21
	    public static let deviceInfo: MesgNumber = 23
	    public static let deviceAuxBatteryInfo: MesgNumber = 375
	    public static let trainingFile: MesgNumber = 72 // Corresponds to file_id of workout or course.
	    public static let weatherConditions: MesgNumber = 128
	    public static let weatherAlert: MesgNumber = 129
	    public static let gpsMetadata: MesgNumber = 160
	    public static let cameraEvent: MesgNumber = 161
	    public static let gyroscopeData: MesgNumber = 164
	    public static let accelerometerData: MesgNumber = 165
	    public static let magnetometerData: MesgNumber = 208
	    public static let barometerData: MesgNumber = 209
	    public static let threeDSensorCalibration: MesgNumber = 167
	    public static let oneDSensorCalibration: MesgNumber = 210
	    public static let videoFrame: MesgNumber = 169
	    public static let obdiiData: MesgNumber = 174
	    public static let nmeaSentence: MesgNumber = 177
	    public static let aviationAttitude: MesgNumber = 178
	    public static let video: MesgNumber = 184
	    public static let videoTitle: MesgNumber = 185
	    public static let videoDescription: MesgNumber = 186
	    public static let videoClip: MesgNumber = 187
	    public static let set: MesgNumber = 225
	    public static let jump: MesgNumber = 285
	    public static let split: MesgNumber = 312
	    public static let splitSummary: MesgNumber = 313
	    public static let climbPro: MesgNumber = 317
	    public static let fieldDescription: MesgNumber = 206 // Must be logged before developer field is used
	    public static let developerDataId: MesgNumber = 207 // Must be logged before field description
	    public static let course: MesgNumber = 31
	    public static let coursePoint: MesgNumber = 32
	    public static let segmentId: MesgNumber = 148 // Unique Identification data for a segment file
	    public static let segmentLeaderboardEntry: MesgNumber = 149 // Unique Identification data for an individual segment leader within a segment file
	    public static let segmentPoint: MesgNumber = 150 // Navigation and race evaluation point for a segment decribing a point along the segment path and time it took each segment leader to reach that point
	    public static let segmentLap: MesgNumber = 142
	    public static let segmentFile: MesgNumber = 151 // Summary of the unique segment and leaderboard information associated with a segment file. This message is used to compile a segment list file describing all segment files on a device. The segment list file is used when refreshing the contents of a segment file with the latest available leaderboard information.
	    public static let workout: MesgNumber = 26
	    public static let workoutSession: MesgNumber = 158
	    public static let workoutStep: MesgNumber = 27
	    public static let exerciseTitle: MesgNumber = 264
	    public static let schedule: MesgNumber = 28
	    public static let totals: MesgNumber = 33
	    public static let weightScale: MesgNumber = 30
	    public static let bloodPressure: MesgNumber = 51
	    public static let monitoringInfo: MesgNumber = 103
	    public static let monitoring: MesgNumber = 55
	    public static let monitoringHrData: MesgNumber = 211
	    public static let spo2Data: MesgNumber = 269
	    public static let hr: MesgNumber = 132
	    public static let stressLevel: MesgNumber = 227 // Value from 1 to 100 calculated by FirstBeat
	    public static let maxMetData: MesgNumber = 229
	    public static let hsaBodyBatteryData: MesgNumber = 314 // Body battery data used for HSA custom data logging
	    public static let hsaEvent: MesgNumber = 315 // HSA events
	    public static let hsaAccelerometerData: MesgNumber = 302 // Raw accelerometer data used for HSA custom data logging
	    public static let hsaGyroscopeData: MesgNumber = 376
	    public static let hsaStepData: MesgNumber = 304 // User's current daily step data used for HSA custom data logging
	    public static let hsaSpo2Data: MesgNumber = 305 // User's current SpO2 data used for HSA custom data logging
	    public static let hsaStressData: MesgNumber = 306 // User's current stress data used for HSA custom data logging
	    public static let hsaRespirationData: MesgNumber = 307 // User's current respiration data used for HSA custom data logging
	    public static let hsaHeartRateData: MesgNumber = 308 // User's current heart rate data used for HSA custom data logging
	    public static let hsaConfigurationData: MesgNumber = 389 // Configuration data for HSA custom data logging
	    public static let hsaWristTemperatureData: MesgNumber = 409 // Wrist temperature data used for HSA custom data logging
	    public static let memoGlob: MesgNumber = 145
	    public static let sleepLevel: MesgNumber = 275
	    public static let antChannelId: MesgNumber = 82
	    public static let antRx: MesgNumber = 80
	    public static let antTx: MesgNumber = 81
	    public static let exdScreenConfiguration: MesgNumber = 200
	    public static let exdDataFieldConfiguration: MesgNumber = 201
	    public static let exdDataConceptConfiguration: MesgNumber = 202
	    public static let diveSummary: MesgNumber = 268
	    public static let aadAccelFeatures: MesgNumber = 289 // Number of acclerometer zero crossings summed over the specified time interval
	    public static let hrv: MesgNumber = 78 // Heart rate variability
	    public static let beatIntervals: MesgNumber = 290 // Array of heart beat intervals
	    public static let hrvStatusSummary: MesgNumber = 370
	    public static let hrvValue: MesgNumber = 371
	    public static let rawBbi: MesgNumber = 372 // Raw Beat-to-Beat Interval values
	    public static let respirationRate: MesgNumber = 297
	    public static let chronoShotSession: MesgNumber = 387 // Specifically used for XERO products.
	    public static let chronoShotData: MesgNumber = 388 // Specifically used for XERO products.
	    public static let tankUpdate: MesgNumber = 319
	    public static let tankSummary: MesgNumber = 323
	    public static let sleepAssessment: MesgNumber = 346
	    public static let skinTempOvernight: MesgNumber = 398
	    public static let pad: MesgNumber = 105
    }
}
