/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


open class HrmProfileMesg : Mesg {
    public static let messageIndexFieldNum:UInt8 = 254
    public static let enabledFieldNum:UInt8 = 0
    public static let hrmAntIdFieldNum:UInt8 = 1
    public static let logHrvFieldNum:UInt8 = 2
    public static let hrmAntIdTransTypeFieldNum:UInt8 = 3

	public init() {
        super.init(mesg: HrmProfileMesg.createHrmProfileMesg())
    }

    public override init(mesg: Mesg) {
        super.init(mesg: mesg)
    }

    fileprivate override init(name: String, num: UInt16) {
        super.init(name: name, num: num)
    }

	public func getMessageIndex() -> MessageIndex? {
		guard let value = getFieldValue(fieldNum: HrmProfileMesg.messageIndexFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setMessageIndex(_ value: MessageIndex) throws {
		try setFieldValue(fieldNum: HrmProfileMesg.messageIndexFieldNum, value: value)
	}

	public func getEnabled() -> Bool? {
		guard let value = getFieldValue(fieldNum: HrmProfileMesg.enabledFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value == 1 ? true : false
	}

	public func setEnabled(_ value: Bool) throws {
		try setFieldValue(fieldNum: HrmProfileMesg.enabledFieldNum, value: value)
	}

	public func getHrmAntId() -> UInt16? {
		guard let value = getFieldValue(fieldNum: HrmProfileMesg.hrmAntIdFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setHrmAntId(_ value: UInt16) throws {
		try setFieldValue(fieldNum: HrmProfileMesg.hrmAntIdFieldNum, value: value)
	}

	public func getLogHrv() -> Bool? {
		guard let value = getFieldValue(fieldNum: HrmProfileMesg.logHrvFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value == 1 ? true : false
	}

	public func setLogHrv(_ value: Bool) throws {
		try setFieldValue(fieldNum: HrmProfileMesg.logHrvFieldNum, value: value)
	}

	public func getHrmAntIdTransType() -> UInt8? {
		guard let value = getFieldValue(fieldNum: HrmProfileMesg.hrmAntIdTransTypeFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setHrmAntIdTransType(_ value: UInt8) throws {
		try setFieldValue(fieldNum: HrmProfileMesg.hrmAntIdTransTypeFieldNum, value: value)
	}

	public class func createHrmProfileMesg() -> HrmProfileMesg {
        let mesg = HrmProfileMesg(name: "HrmProfile", num: Profile.MesgNum.hrmProfile)
		
		mesg.fields[HrmProfileMesg.messageIndexFieldNum] = Field(name: "MessageIndex", num: HrmProfileMesg.messageIndexFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[HrmProfileMesg.enabledFieldNum] = Field(name: "Enabled", num: HrmProfileMesg.enabledFieldNum, type: BaseType.ENUM.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[HrmProfileMesg.hrmAntIdFieldNum] = Field(name: "HrmAntId", num: HrmProfileMesg.hrmAntIdFieldNum, type: BaseType.UINT16Z.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[HrmProfileMesg.logHrvFieldNum] = Field(name: "LogHrv", num: HrmProfileMesg.logHrvFieldNum, type: BaseType.ENUM.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[HrmProfileMesg.hrmAntIdTransTypeFieldNum] = Field(name: "HrmAntIdTransType", num: HrmProfileMesg.hrmAntIdTransTypeFieldNum, type: BaseType.UINT8Z.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
        return mesg
    }
}