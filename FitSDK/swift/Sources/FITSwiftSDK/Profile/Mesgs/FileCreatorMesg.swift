/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


open class FileCreatorMesg : Mesg {
    public static let softwareVersionFieldNum:UInt8 = 0
    public static let hardwareVersionFieldNum:UInt8 = 1

	public init() {
        super.init(mesg: FileCreatorMesg.createFileCreatorMesg())
    }

    public override init(mesg: Mesg) {
        super.init(mesg: mesg)
    }

    fileprivate override init(name: String, num: UInt16) {
        super.init(name: name, num: num)
    }

	public func getSoftwareVersion() -> UInt16? {
		guard let value = getFieldValue(fieldNum: FileCreatorMesg.softwareVersionFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setSoftwareVersion(_ value: UInt16) throws {
		try setFieldValue(fieldNum: FileCreatorMesg.softwareVersionFieldNum, value: value)
	}

	public func getHardwareVersion() -> UInt8? {
		guard let value = getFieldValue(fieldNum: FileCreatorMesg.hardwareVersionFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setHardwareVersion(_ value: UInt8) throws {
		try setFieldValue(fieldNum: FileCreatorMesg.hardwareVersionFieldNum, value: value)
	}

	public class func createFileCreatorMesg() -> FileCreatorMesg {
        let mesg = FileCreatorMesg(name: "FileCreator", num: Profile.MesgNum.fileCreator)
		
		mesg.fields[FileCreatorMesg.softwareVersionFieldNum] = Field(name: "SoftwareVersion", num: FileCreatorMesg.softwareVersionFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[FileCreatorMesg.hardwareVersionFieldNum] = Field(name: "HardwareVersion", num: FileCreatorMesg.hardwareVersionFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
        return mesg
    }
}