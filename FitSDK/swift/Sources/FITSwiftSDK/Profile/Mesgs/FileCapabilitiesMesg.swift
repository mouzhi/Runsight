/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


open class FileCapabilitiesMesg : Mesg {
    public static let messageIndexFieldNum:UInt8 = 254
    public static let typeFieldNum:UInt8 = 0
    public static let flagsFieldNum:UInt8 = 1
    public static let directoryFieldNum:UInt8 = 2
    public static let maxCountFieldNum:UInt8 = 3
    public static let maxSizeFieldNum:UInt8 = 4

	public init() {
        super.init(mesg: FileCapabilitiesMesg.createFileCapabilitiesMesg())
    }

    public override init(mesg: Mesg) {
        super.init(mesg: mesg)
    }

    fileprivate override init(name: String, num: UInt16) {
        super.init(name: name, num: num)
    }

	public func getMessageIndex() -> MessageIndex? {
		guard let value = getFieldValue(fieldNum: FileCapabilitiesMesg.messageIndexFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setMessageIndex(_ value: MessageIndex) throws {
		try setFieldValue(fieldNum: FileCapabilitiesMesg.messageIndexFieldNum, value: value)
	}

	public func getType() -> File? {
		guard let value = getFieldValue(fieldNum: FileCapabilitiesMesg.typeFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return File(rawValue: value) ?? .invalid
	}

	public func setType(_ value: File) throws {
		try setFieldValue(fieldNum: FileCapabilitiesMesg.typeFieldNum, value: value.rawValue)
	}

	public func getFlags() -> FileFlags? {
		guard let value = getFieldValue(fieldNum: FileCapabilitiesMesg.flagsFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setFlags(_ value: FileFlags) throws {
		try setFieldValue(fieldNum: FileCapabilitiesMesg.flagsFieldNum, value: value)
	}

	public func getDirectory() -> String? {
		guard let value = getFieldValue(fieldNum: FileCapabilitiesMesg.directoryFieldNum, index:0) as? String else {
            return nil
        }
		return value
	}

	public func setDirectory(_ value: String) throws {
		try setFieldValue(fieldNum: FileCapabilitiesMesg.directoryFieldNum, value: value)
	}

	public func getMaxCount() -> UInt16? {
		guard let value = getFieldValue(fieldNum: FileCapabilitiesMesg.maxCountFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setMaxCount(_ value: UInt16) throws {
		try setFieldValue(fieldNum: FileCapabilitiesMesg.maxCountFieldNum, value: value)
	}

	public func getMaxSize() -> UInt32? {
		guard let value = getFieldValue(fieldNum: FileCapabilitiesMesg.maxSizeFieldNum, index:0) as? UInt32 else {
            return nil
        }
		return value
	}

	public func setMaxSize(_ value: UInt32) throws {
		try setFieldValue(fieldNum: FileCapabilitiesMesg.maxSizeFieldNum, value: value)
	}

	public class func createFileCapabilitiesMesg() -> FileCapabilitiesMesg {
        let mesg = FileCapabilitiesMesg(name: "FileCapabilities", num: Profile.MesgNum.fileCapabilities)
		
		mesg.fields[FileCapabilitiesMesg.messageIndexFieldNum] = Field(name: "MessageIndex", num: FileCapabilitiesMesg.messageIndexFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[FileCapabilitiesMesg.typeFieldNum] = Field(name: "Type", num: FileCapabilitiesMesg.typeFieldNum, type: BaseType.ENUM.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[FileCapabilitiesMesg.flagsFieldNum] = Field(name: "Flags", num: FileCapabilitiesMesg.flagsFieldNum, type: BaseType.UINT8Z.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[FileCapabilitiesMesg.directoryFieldNum] = Field(name: "Directory", num: FileCapabilitiesMesg.directoryFieldNum, type: BaseType.STRING.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[FileCapabilitiesMesg.maxCountFieldNum] = Field(name: "MaxCount", num: FileCapabilitiesMesg.maxCountFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[FileCapabilitiesMesg.maxSizeFieldNum] = Field(name: "MaxSize", num: FileCapabilitiesMesg.maxSizeFieldNum, type: BaseType.UINT32.rawValue, scale: 1, offset: 0, units: "bytes", accumulated: false)
        return mesg
    }
}