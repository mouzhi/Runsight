/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


open class VideoDescriptionMesg : Mesg {
    public static let messageIndexFieldNum:UInt8 = 254
    public static let messageCountFieldNum:UInt8 = 0
    public static let textFieldNum:UInt8 = 1

	public init() {
        super.init(mesg: VideoDescriptionMesg.createVideoDescriptionMesg())
    }

    public override init(mesg: Mesg) {
        super.init(mesg: mesg)
    }

    fileprivate override init(name: String, num: UInt16) {
        super.init(name: name, num: num)
    }

	public func getMessageIndex() -> MessageIndex? {
		guard let value = getFieldValue(fieldNum: VideoDescriptionMesg.messageIndexFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setMessageIndex(_ value: MessageIndex) throws {
		try setFieldValue(fieldNum: VideoDescriptionMesg.messageIndexFieldNum, value: value)
	}

	public func getMessageCount() -> UInt16? {
		guard let value = getFieldValue(fieldNum: VideoDescriptionMesg.messageCountFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setMessageCount(_ value: UInt16) throws {
		try setFieldValue(fieldNum: VideoDescriptionMesg.messageCountFieldNum, value: value)
	}

	public func getText() -> String? {
		guard let value = getFieldValue(fieldNum: VideoDescriptionMesg.textFieldNum, index:0) as? String else {
            return nil
        }
		return value
	}

	public func setText(_ value: String) throws {
		try setFieldValue(fieldNum: VideoDescriptionMesg.textFieldNum, value: value)
	}

	public class func createVideoDescriptionMesg() -> VideoDescriptionMesg {
        let mesg = VideoDescriptionMesg(name: "VideoDescription", num: Profile.MesgNum.videoDescription)
		
		mesg.fields[VideoDescriptionMesg.messageIndexFieldNum] = Field(name: "MessageIndex", num: VideoDescriptionMesg.messageIndexFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[VideoDescriptionMesg.messageCountFieldNum] = Field(name: "MessageCount", num: VideoDescriptionMesg.messageCountFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[VideoDescriptionMesg.textFieldNum] = Field(name: "Text", num: VideoDescriptionMesg.textFieldNum, type: BaseType.STRING.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
        return mesg
    }
}