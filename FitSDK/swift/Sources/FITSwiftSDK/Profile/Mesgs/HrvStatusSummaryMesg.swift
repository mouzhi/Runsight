/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


open class HrvStatusSummaryMesg : Mesg {
    public static let timestampFieldNum:UInt8 = 253
    public static let weeklyAverageFieldNum:UInt8 = 0
    public static let lastNightAverageFieldNum:UInt8 = 1
    public static let lastNight5MinHighFieldNum:UInt8 = 2
    public static let baselineLowUpperFieldNum:UInt8 = 3
    public static let baselineBalancedLowerFieldNum:UInt8 = 4
    public static let baselineBalancedUpperFieldNum:UInt8 = 5
    public static let statusFieldNum:UInt8 = 6

	public init() {
        super.init(mesg: HrvStatusSummaryMesg.createHrvStatusSummaryMesg())
    }

    public override init(mesg: Mesg) {
        super.init(mesg: mesg)
    }

    fileprivate override init(name: String, num: UInt16) {
        super.init(name: name, num: num)
    }

	public func getTimestamp() -> DateTime? {
		guard let value = getFieldValue(fieldNum: HrvStatusSummaryMesg.timestampFieldNum, index:0) as? UInt32 else {
            return nil
        }
		return DateTime(timestamp: value)
	}

	public func setTimestamp(_ value: DateTime) throws {
		try setFieldValue(fieldNum: HrvStatusSummaryMesg.timestampFieldNum, value: value.timestamp)
	}

	public func getWeeklyAverage() -> Float64? {
		guard let value = getFieldValue(fieldNum: HrvStatusSummaryMesg.weeklyAverageFieldNum, index:0) as? Float64 else {
            return nil
        }
		return value
	}

	public func setWeeklyAverage(_ value: Float64) throws {
		try setFieldValue(fieldNum: HrvStatusSummaryMesg.weeklyAverageFieldNum, value: value)
	}

	public func getLastNightAverage() -> Float64? {
		guard let value = getFieldValue(fieldNum: HrvStatusSummaryMesg.lastNightAverageFieldNum, index:0) as? Float64 else {
            return nil
        }
		return value
	}

	public func setLastNightAverage(_ value: Float64) throws {
		try setFieldValue(fieldNum: HrvStatusSummaryMesg.lastNightAverageFieldNum, value: value)
	}

	public func getLastNight5MinHigh() -> Float64? {
		guard let value = getFieldValue(fieldNum: HrvStatusSummaryMesg.lastNight5MinHighFieldNum, index:0) as? Float64 else {
            return nil
        }
		return value
	}

	public func setLastNight5MinHigh(_ value: Float64) throws {
		try setFieldValue(fieldNum: HrvStatusSummaryMesg.lastNight5MinHighFieldNum, value: value)
	}

	public func getBaselineLowUpper() -> Float64? {
		guard let value = getFieldValue(fieldNum: HrvStatusSummaryMesg.baselineLowUpperFieldNum, index:0) as? Float64 else {
            return nil
        }
		return value
	}

	public func setBaselineLowUpper(_ value: Float64) throws {
		try setFieldValue(fieldNum: HrvStatusSummaryMesg.baselineLowUpperFieldNum, value: value)
	}

	public func getBaselineBalancedLower() -> Float64? {
		guard let value = getFieldValue(fieldNum: HrvStatusSummaryMesg.baselineBalancedLowerFieldNum, index:0) as? Float64 else {
            return nil
        }
		return value
	}

	public func setBaselineBalancedLower(_ value: Float64) throws {
		try setFieldValue(fieldNum: HrvStatusSummaryMesg.baselineBalancedLowerFieldNum, value: value)
	}

	public func getBaselineBalancedUpper() -> Float64? {
		guard let value = getFieldValue(fieldNum: HrvStatusSummaryMesg.baselineBalancedUpperFieldNum, index:0) as? Float64 else {
            return nil
        }
		return value
	}

	public func setBaselineBalancedUpper(_ value: Float64) throws {
		try setFieldValue(fieldNum: HrvStatusSummaryMesg.baselineBalancedUpperFieldNum, value: value)
	}

	public func getStatus() -> HrvStatus? {
		guard let value = getFieldValue(fieldNum: HrvStatusSummaryMesg.statusFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return HrvStatus(rawValue: value) ?? .invalid
	}

	public func setStatus(_ value: HrvStatus) throws {
		try setFieldValue(fieldNum: HrvStatusSummaryMesg.statusFieldNum, value: value.rawValue)
	}

	public class func createHrvStatusSummaryMesg() -> HrvStatusSummaryMesg {
        let mesg = HrvStatusSummaryMesg(name: "HrvStatusSummary", num: Profile.MesgNum.hrvStatusSummary)
		
		mesg.fields[HrvStatusSummaryMesg.timestampFieldNum] = Field(name: "Timestamp", num: HrvStatusSummaryMesg.timestampFieldNum, type: BaseType.UINT32.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[HrvStatusSummaryMesg.weeklyAverageFieldNum] = Field(name: "WeeklyAverage", num: HrvStatusSummaryMesg.weeklyAverageFieldNum, type: BaseType.UINT16.rawValue, scale: 128, offset: 0, units: "ms", accumulated: false)
		mesg.fields[HrvStatusSummaryMesg.lastNightAverageFieldNum] = Field(name: "LastNightAverage", num: HrvStatusSummaryMesg.lastNightAverageFieldNum, type: BaseType.UINT16.rawValue, scale: 128, offset: 0, units: "ms", accumulated: false)
		mesg.fields[HrvStatusSummaryMesg.lastNight5MinHighFieldNum] = Field(name: "LastNight5MinHigh", num: HrvStatusSummaryMesg.lastNight5MinHighFieldNum, type: BaseType.UINT16.rawValue, scale: 128, offset: 0, units: "ms", accumulated: false)
		mesg.fields[HrvStatusSummaryMesg.baselineLowUpperFieldNum] = Field(name: "BaselineLowUpper", num: HrvStatusSummaryMesg.baselineLowUpperFieldNum, type: BaseType.UINT16.rawValue, scale: 128, offset: 0, units: "ms", accumulated: false)
		mesg.fields[HrvStatusSummaryMesg.baselineBalancedLowerFieldNum] = Field(name: "BaselineBalancedLower", num: HrvStatusSummaryMesg.baselineBalancedLowerFieldNum, type: BaseType.UINT16.rawValue, scale: 128, offset: 0, units: "ms", accumulated: false)
		mesg.fields[HrvStatusSummaryMesg.baselineBalancedUpperFieldNum] = Field(name: "BaselineBalancedUpper", num: HrvStatusSummaryMesg.baselineBalancedUpperFieldNum, type: BaseType.UINT16.rawValue, scale: 128, offset: 0, units: "ms", accumulated: false)
		mesg.fields[HrvStatusSummaryMesg.statusFieldNum] = Field(name: "Status", num: HrvStatusSummaryMesg.statusFieldNum, type: BaseType.ENUM.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
        return mesg
    }
}