/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


open class SleepAssessmentMesg : Mesg {
    public static let combinedAwakeScoreFieldNum:UInt8 = 0
    public static let awakeTimeScoreFieldNum:UInt8 = 1
    public static let awakeningsCountScoreFieldNum:UInt8 = 2
    public static let deepSleepScoreFieldNum:UInt8 = 3
    public static let sleepDurationScoreFieldNum:UInt8 = 4
    public static let lightSleepScoreFieldNum:UInt8 = 5
    public static let overallSleepScoreFieldNum:UInt8 = 6
    public static let sleepQualityScoreFieldNum:UInt8 = 7
    public static let sleepRecoveryScoreFieldNum:UInt8 = 8
    public static let remSleepScoreFieldNum:UInt8 = 9
    public static let sleepRestlessnessScoreFieldNum:UInt8 = 10
    public static let awakeningsCountFieldNum:UInt8 = 11
    public static let interruptionsScoreFieldNum:UInt8 = 14
    public static let averageStressDuringSleepFieldNum:UInt8 = 15

	public init() {
        super.init(mesg: SleepAssessmentMesg.createSleepAssessmentMesg())
    }

    public override init(mesg: Mesg) {
        super.init(mesg: mesg)
    }

    fileprivate override init(name: String, num: UInt16) {
        super.init(name: name, num: num)
    }

	public func getCombinedAwakeScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.combinedAwakeScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setCombinedAwakeScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.combinedAwakeScoreFieldNum, value: value)
	}

	public func getAwakeTimeScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.awakeTimeScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setAwakeTimeScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.awakeTimeScoreFieldNum, value: value)
	}

	public func getAwakeningsCountScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.awakeningsCountScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setAwakeningsCountScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.awakeningsCountScoreFieldNum, value: value)
	}

	public func getDeepSleepScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.deepSleepScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setDeepSleepScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.deepSleepScoreFieldNum, value: value)
	}

	public func getSleepDurationScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.sleepDurationScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setSleepDurationScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.sleepDurationScoreFieldNum, value: value)
	}

	public func getLightSleepScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.lightSleepScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setLightSleepScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.lightSleepScoreFieldNum, value: value)
	}

	public func getOverallSleepScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.overallSleepScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setOverallSleepScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.overallSleepScoreFieldNum, value: value)
	}

	public func getSleepQualityScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.sleepQualityScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setSleepQualityScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.sleepQualityScoreFieldNum, value: value)
	}

	public func getSleepRecoveryScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.sleepRecoveryScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setSleepRecoveryScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.sleepRecoveryScoreFieldNum, value: value)
	}

	public func getRemSleepScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.remSleepScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setRemSleepScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.remSleepScoreFieldNum, value: value)
	}

	public func getSleepRestlessnessScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.sleepRestlessnessScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setSleepRestlessnessScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.sleepRestlessnessScoreFieldNum, value: value)
	}

	public func getAwakeningsCount() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.awakeningsCountFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setAwakeningsCount(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.awakeningsCountFieldNum, value: value)
	}

	public func getInterruptionsScore() -> UInt8? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.interruptionsScoreFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setInterruptionsScore(_ value: UInt8) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.interruptionsScoreFieldNum, value: value)
	}

	public func getAverageStressDuringSleep() -> Float64? {
		guard let value = getFieldValue(fieldNum: SleepAssessmentMesg.averageStressDuringSleepFieldNum, index:0) as? Float64 else {
            return nil
        }
		return value
	}

	public func setAverageStressDuringSleep(_ value: Float64) throws {
		try setFieldValue(fieldNum: SleepAssessmentMesg.averageStressDuringSleepFieldNum, value: value)
	}

	public class func createSleepAssessmentMesg() -> SleepAssessmentMesg {
        let mesg = SleepAssessmentMesg(name: "SleepAssessment", num: Profile.MesgNum.sleepAssessment)
		
		mesg.fields[SleepAssessmentMesg.combinedAwakeScoreFieldNum] = Field(name: "CombinedAwakeScore", num: SleepAssessmentMesg.combinedAwakeScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.awakeTimeScoreFieldNum] = Field(name: "AwakeTimeScore", num: SleepAssessmentMesg.awakeTimeScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.awakeningsCountScoreFieldNum] = Field(name: "AwakeningsCountScore", num: SleepAssessmentMesg.awakeningsCountScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.deepSleepScoreFieldNum] = Field(name: "DeepSleepScore", num: SleepAssessmentMesg.deepSleepScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.sleepDurationScoreFieldNum] = Field(name: "SleepDurationScore", num: SleepAssessmentMesg.sleepDurationScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.lightSleepScoreFieldNum] = Field(name: "LightSleepScore", num: SleepAssessmentMesg.lightSleepScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.overallSleepScoreFieldNum] = Field(name: "OverallSleepScore", num: SleepAssessmentMesg.overallSleepScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.sleepQualityScoreFieldNum] = Field(name: "SleepQualityScore", num: SleepAssessmentMesg.sleepQualityScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.sleepRecoveryScoreFieldNum] = Field(name: "SleepRecoveryScore", num: SleepAssessmentMesg.sleepRecoveryScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.remSleepScoreFieldNum] = Field(name: "RemSleepScore", num: SleepAssessmentMesg.remSleepScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.sleepRestlessnessScoreFieldNum] = Field(name: "SleepRestlessnessScore", num: SleepAssessmentMesg.sleepRestlessnessScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.awakeningsCountFieldNum] = Field(name: "AwakeningsCount", num: SleepAssessmentMesg.awakeningsCountFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.interruptionsScoreFieldNum] = Field(name: "InterruptionsScore", num: SleepAssessmentMesg.interruptionsScoreFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[SleepAssessmentMesg.averageStressDuringSleepFieldNum] = Field(name: "AverageStressDuringSleep", num: SleepAssessmentMesg.averageStressDuringSleepFieldNum, type: BaseType.UINT16.rawValue, scale: 100, offset: 0, units: "", accumulated: false)
        return mesg
    }
}