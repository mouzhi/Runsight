/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


open class VideoFrameMesg : Mesg {
    public static let timestampFieldNum:UInt8 = 253
    public static let timestampMsFieldNum:UInt8 = 0
    public static let frameNumberFieldNum:UInt8 = 1

	public init() {
        super.init(mesg: VideoFrameMesg.createVideoFrameMesg())
    }

    public override init(mesg: Mesg) {
        super.init(mesg: mesg)
    }

    fileprivate override init(name: String, num: UInt16) {
        super.init(name: name, num: num)
    }

	public func getTimestamp() -> DateTime? {
		guard let value = getFieldValue(fieldNum: VideoFrameMesg.timestampFieldNum, index:0) as? UInt32 else {
            return nil
        }
		return DateTime(timestamp: value)
	}

	public func setTimestamp(_ value: DateTime) throws {
		try setFieldValue(fieldNum: VideoFrameMesg.timestampFieldNum, value: value.timestamp)
	}

	public func getTimestampMs() -> UInt16? {
		guard let value = getFieldValue(fieldNum: VideoFrameMesg.timestampMsFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setTimestampMs(_ value: UInt16) throws {
		try setFieldValue(fieldNum: VideoFrameMesg.timestampMsFieldNum, value: value)
	}

	public func getFrameNumber() -> UInt32? {
		guard let value = getFieldValue(fieldNum: VideoFrameMesg.frameNumberFieldNum, index:0) as? UInt32 else {
            return nil
        }
		return value
	}

	public func setFrameNumber(_ value: UInt32) throws {
		try setFieldValue(fieldNum: VideoFrameMesg.frameNumberFieldNum, value: value)
	}

	public class func createVideoFrameMesg() -> VideoFrameMesg {
        let mesg = VideoFrameMesg(name: "VideoFrame", num: Profile.MesgNum.videoFrame)
		
		mesg.fields[VideoFrameMesg.timestampFieldNum] = Field(name: "Timestamp", num: VideoFrameMesg.timestampFieldNum, type: BaseType.UINT32.rawValue, scale: 1, offset: 0, units: "s", accumulated: false)
		mesg.fields[VideoFrameMesg.timestampMsFieldNum] = Field(name: "TimestampMs", num: VideoFrameMesg.timestampMsFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "ms", accumulated: false)
		mesg.fields[VideoFrameMesg.frameNumberFieldNum] = Field(name: "FrameNumber", num: VideoFrameMesg.frameNumberFieldNum, type: BaseType.UINT32.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
        return mesg
    }
}