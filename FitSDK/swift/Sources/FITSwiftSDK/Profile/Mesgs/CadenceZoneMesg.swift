/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


open class CadenceZoneMesg : Mesg {
    public static let messageIndexFieldNum:UInt8 = 254
    public static let highValueFieldNum:UInt8 = 0
    public static let nameFieldNum:UInt8 = 1

	public init() {
        super.init(mesg: CadenceZoneMesg.createCadenceZoneMesg())
    }

    public override init(mesg: Mesg) {
        super.init(mesg: mesg)
    }

    fileprivate override init(name: String, num: UInt16) {
        super.init(name: name, num: num)
    }

	public func getMessageIndex() -> MessageIndex? {
		guard let value = getFieldValue(fieldNum: CadenceZoneMesg.messageIndexFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setMessageIndex(_ value: MessageIndex) throws {
		try setFieldValue(fieldNum: CadenceZoneMesg.messageIndexFieldNum, value: value)
	}

	public func getHighValue() -> UInt8? {
		guard let value = getFieldValue(fieldNum: CadenceZoneMesg.highValueFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setHighValue(_ value: UInt8) throws {
		try setFieldValue(fieldNum: CadenceZoneMesg.highValueFieldNum, value: value)
	}

	public func getName() -> String? {
		guard let value = getFieldValue(fieldNum: CadenceZoneMesg.nameFieldNum, index:0) as? String else {
            return nil
        }
		return value
	}

	public func setName(_ value: String) throws {
		try setFieldValue(fieldNum: CadenceZoneMesg.nameFieldNum, value: value)
	}

	public class func createCadenceZoneMesg() -> CadenceZoneMesg {
        let mesg = CadenceZoneMesg(name: "CadenceZone", num: Profile.MesgNum.cadenceZone)
		
		mesg.fields[CadenceZoneMesg.messageIndexFieldNum] = Field(name: "MessageIndex", num: CadenceZoneMesg.messageIndexFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[CadenceZoneMesg.highValueFieldNum] = Field(name: "HighValue", num: CadenceZoneMesg.highValueFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "rpm", accumulated: false)
		mesg.fields[CadenceZoneMesg.nameFieldNum] = Field(name: "Name", num: CadenceZoneMesg.nameFieldNum, type: BaseType.STRING.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
        return mesg
    }
}