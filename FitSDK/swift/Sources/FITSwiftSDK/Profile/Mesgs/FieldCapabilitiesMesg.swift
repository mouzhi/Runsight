/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


open class FieldCapabilitiesMesg : Mesg {
    public static let messageIndexFieldNum:UInt8 = 254
    public static let fileFieldNum:UInt8 = 0
    public static let mesgNumFieldNum:UInt8 = 1
    public static let fieldNumFieldNum:UInt8 = 2
    public static let countFieldNum:UInt8 = 3

	public init() {
        super.init(mesg: FieldCapabilitiesMesg.createFieldCapabilitiesMesg())
    }

    public override init(mesg: Mesg) {
        super.init(mesg: mesg)
    }

    fileprivate override init(name: String, num: UInt16) {
        super.init(name: name, num: num)
    }

	public func getMessageIndex() -> MessageIndex? {
		guard let value = getFieldValue(fieldNum: FieldCapabilitiesMesg.messageIndexFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setMessageIndex(_ value: MessageIndex) throws {
		try setFieldValue(fieldNum: FieldCapabilitiesMesg.messageIndexFieldNum, value: value)
	}

	public func getFile() -> File? {
		guard let value = getFieldValue(fieldNum: FieldCapabilitiesMesg.fileFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return File(rawValue: value) ?? .invalid
	}

	public func setFile(_ value: File) throws {
		try setFieldValue(fieldNum: FieldCapabilitiesMesg.fileFieldNum, value: value.rawValue)
	}

	public func getMesgNum() -> MesgNum? {
		guard let value = getFieldValue(fieldNum: FieldCapabilitiesMesg.mesgNumFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return MesgNum(rawValue: value) ?? .invalid
	}

	public func setMesgNum(_ value: MesgNum) throws {
		try setFieldValue(fieldNum: FieldCapabilitiesMesg.mesgNumFieldNum, value: value.rawValue)
	}

	public func getFieldNum() -> UInt8? {
		guard let value = getFieldValue(fieldNum: FieldCapabilitiesMesg.fieldNumFieldNum, index:0) as? UInt8 else {
            return nil
        }
		return value
	}

	public func setFieldNum(_ value: UInt8) throws {
		try setFieldValue(fieldNum: FieldCapabilitiesMesg.fieldNumFieldNum, value: value)
	}

	public func getCount() -> UInt16? {
		guard let value = getFieldValue(fieldNum: FieldCapabilitiesMesg.countFieldNum, index:0) as? UInt16 else {
            return nil
        }
		return value
	}

	public func setCount(_ value: UInt16) throws {
		try setFieldValue(fieldNum: FieldCapabilitiesMesg.countFieldNum, value: value)
	}

	public class func createFieldCapabilitiesMesg() -> FieldCapabilitiesMesg {
        let mesg = FieldCapabilitiesMesg(name: "FieldCapabilities", num: Profile.MesgNum.fieldCapabilities)
		
		mesg.fields[FieldCapabilitiesMesg.messageIndexFieldNum] = Field(name: "MessageIndex", num: FieldCapabilitiesMesg.messageIndexFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[FieldCapabilitiesMesg.fileFieldNum] = Field(name: "File", num: FieldCapabilitiesMesg.fileFieldNum, type: BaseType.ENUM.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[FieldCapabilitiesMesg.mesgNumFieldNum] = Field(name: "MesgNum", num: FieldCapabilitiesMesg.mesgNumFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[FieldCapabilitiesMesg.fieldNumFieldNum] = Field(name: "FieldNum", num: FieldCapabilitiesMesg.fieldNumFieldNum, type: BaseType.UINT8.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
		mesg.fields[FieldCapabilitiesMesg.countFieldNum] = Field(name: "Count", num: FieldCapabilitiesMesg.countFieldNum, type: BaseType.UINT16.rawValue, scale: 1, offset: 0, units: "", accumulated: false)
        return mesg
    }
}