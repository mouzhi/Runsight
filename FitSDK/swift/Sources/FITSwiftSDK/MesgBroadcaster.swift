/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


import Foundation

public class MesgBroadcaster: MesgListener {
    private var fileIdMesgListeners: [ObjectIdentifier : FileIdMesgListener] = [:]
    private var fileCreatorMesgListeners: [ObjectIdentifier : FileCreatorMesgListener] = [:]
    private var timestampCorrelationMesgListeners: [ObjectIdentifier : TimestampCorrelationMesgListener] = [:]
    private var softwareMesgListeners: [ObjectIdentifier : SoftwareMesgListener] = [:]
    private var slaveDeviceMesgListeners: [ObjectIdentifier : SlaveDeviceMesgListener] = [:]
    private var capabilitiesMesgListeners: [ObjectIdentifier : CapabilitiesMesgListener] = [:]
    private var fileCapabilitiesMesgListeners: [ObjectIdentifier : FileCapabilitiesMesgListener] = [:]
    private var mesgCapabilitiesMesgListeners: [ObjectIdentifier : MesgCapabilitiesMesgListener] = [:]
    private var fieldCapabilitiesMesgListeners: [ObjectIdentifier : FieldCapabilitiesMesgListener] = [:]
    private var deviceSettingsMesgListeners: [ObjectIdentifier : DeviceSettingsMesgListener] = [:]
    private var userProfileMesgListeners: [ObjectIdentifier : UserProfileMesgListener] = [:]
    private var hrmProfileMesgListeners: [ObjectIdentifier : HrmProfileMesgListener] = [:]
    private var sdmProfileMesgListeners: [ObjectIdentifier : SdmProfileMesgListener] = [:]
    private var bikeProfileMesgListeners: [ObjectIdentifier : BikeProfileMesgListener] = [:]
    private var connectivityMesgListeners: [ObjectIdentifier : ConnectivityMesgListener] = [:]
    private var watchfaceSettingsMesgListeners: [ObjectIdentifier : WatchfaceSettingsMesgListener] = [:]
    private var ohrSettingsMesgListeners: [ObjectIdentifier : OhrSettingsMesgListener] = [:]
    private var timeInZoneMesgListeners: [ObjectIdentifier : TimeInZoneMesgListener] = [:]
    private var zonesTargetMesgListeners: [ObjectIdentifier : ZonesTargetMesgListener] = [:]
    private var sportMesgListeners: [ObjectIdentifier : SportMesgListener] = [:]
    private var hrZoneMesgListeners: [ObjectIdentifier : HrZoneMesgListener] = [:]
    private var speedZoneMesgListeners: [ObjectIdentifier : SpeedZoneMesgListener] = [:]
    private var cadenceZoneMesgListeners: [ObjectIdentifier : CadenceZoneMesgListener] = [:]
    private var powerZoneMesgListeners: [ObjectIdentifier : PowerZoneMesgListener] = [:]
    private var metZoneMesgListeners: [ObjectIdentifier : MetZoneMesgListener] = [:]
    private var trainingSettingsMesgListeners: [ObjectIdentifier : TrainingSettingsMesgListener] = [:]
    private var diveSettingsMesgListeners: [ObjectIdentifier : DiveSettingsMesgListener] = [:]
    private var diveAlarmMesgListeners: [ObjectIdentifier : DiveAlarmMesgListener] = [:]
    private var diveApneaAlarmMesgListeners: [ObjectIdentifier : DiveApneaAlarmMesgListener] = [:]
    private var diveGasMesgListeners: [ObjectIdentifier : DiveGasMesgListener] = [:]
    private var goalMesgListeners: [ObjectIdentifier : GoalMesgListener] = [:]
    private var activityMesgListeners: [ObjectIdentifier : ActivityMesgListener] = [:]
    private var sessionMesgListeners: [ObjectIdentifier : SessionMesgListener] = [:]
    private var lapMesgListeners: [ObjectIdentifier : LapMesgListener] = [:]
    private var lengthMesgListeners: [ObjectIdentifier : LengthMesgListener] = [:]
    private var recordMesgListeners: [ObjectIdentifier : RecordMesgListener] = [:]
    private var eventMesgListeners: [ObjectIdentifier : EventMesgListener] = [:]
    private var deviceInfoMesgListeners: [ObjectIdentifier : DeviceInfoMesgListener] = [:]
    private var deviceAuxBatteryInfoMesgListeners: [ObjectIdentifier : DeviceAuxBatteryInfoMesgListener] = [:]
    private var trainingFileMesgListeners: [ObjectIdentifier : TrainingFileMesgListener] = [:]
    private var weatherConditionsMesgListeners: [ObjectIdentifier : WeatherConditionsMesgListener] = [:]
    private var weatherAlertMesgListeners: [ObjectIdentifier : WeatherAlertMesgListener] = [:]
    private var gpsMetadataMesgListeners: [ObjectIdentifier : GpsMetadataMesgListener] = [:]
    private var cameraEventMesgListeners: [ObjectIdentifier : CameraEventMesgListener] = [:]
    private var gyroscopeDataMesgListeners: [ObjectIdentifier : GyroscopeDataMesgListener] = [:]
    private var accelerometerDataMesgListeners: [ObjectIdentifier : AccelerometerDataMesgListener] = [:]
    private var magnetometerDataMesgListeners: [ObjectIdentifier : MagnetometerDataMesgListener] = [:]
    private var barometerDataMesgListeners: [ObjectIdentifier : BarometerDataMesgListener] = [:]
    private var threeDSensorCalibrationMesgListeners: [ObjectIdentifier : ThreeDSensorCalibrationMesgListener] = [:]
    private var oneDSensorCalibrationMesgListeners: [ObjectIdentifier : OneDSensorCalibrationMesgListener] = [:]
    private var videoFrameMesgListeners: [ObjectIdentifier : VideoFrameMesgListener] = [:]
    private var obdiiDataMesgListeners: [ObjectIdentifier : ObdiiDataMesgListener] = [:]
    private var nmeaSentenceMesgListeners: [ObjectIdentifier : NmeaSentenceMesgListener] = [:]
    private var aviationAttitudeMesgListeners: [ObjectIdentifier : AviationAttitudeMesgListener] = [:]
    private var videoMesgListeners: [ObjectIdentifier : VideoMesgListener] = [:]
    private var videoTitleMesgListeners: [ObjectIdentifier : VideoTitleMesgListener] = [:]
    private var videoDescriptionMesgListeners: [ObjectIdentifier : VideoDescriptionMesgListener] = [:]
    private var videoClipMesgListeners: [ObjectIdentifier : VideoClipMesgListener] = [:]
    private var setMesgListeners: [ObjectIdentifier : SetMesgListener] = [:]
    private var jumpMesgListeners: [ObjectIdentifier : JumpMesgListener] = [:]
    private var splitMesgListeners: [ObjectIdentifier : SplitMesgListener] = [:]
    private var splitSummaryMesgListeners: [ObjectIdentifier : SplitSummaryMesgListener] = [:]
    private var climbProMesgListeners: [ObjectIdentifier : ClimbProMesgListener] = [:]
    private var fieldDescriptionMesgListeners: [ObjectIdentifier : FieldDescriptionMesgListener] = [:]
    private var developerDataIdMesgListeners: [ObjectIdentifier : DeveloperDataIdMesgListener] = [:]
    private var courseMesgListeners: [ObjectIdentifier : CourseMesgListener] = [:]
    private var coursePointMesgListeners: [ObjectIdentifier : CoursePointMesgListener] = [:]
    private var segmentIdMesgListeners: [ObjectIdentifier : SegmentIdMesgListener] = [:]
    private var segmentLeaderboardEntryMesgListeners: [ObjectIdentifier : SegmentLeaderboardEntryMesgListener] = [:]
    private var segmentPointMesgListeners: [ObjectIdentifier : SegmentPointMesgListener] = [:]
    private var segmentLapMesgListeners: [ObjectIdentifier : SegmentLapMesgListener] = [:]
    private var segmentFileMesgListeners: [ObjectIdentifier : SegmentFileMesgListener] = [:]
    private var workoutMesgListeners: [ObjectIdentifier : WorkoutMesgListener] = [:]
    private var workoutSessionMesgListeners: [ObjectIdentifier : WorkoutSessionMesgListener] = [:]
    private var workoutStepMesgListeners: [ObjectIdentifier : WorkoutStepMesgListener] = [:]
    private var exerciseTitleMesgListeners: [ObjectIdentifier : ExerciseTitleMesgListener] = [:]
    private var scheduleMesgListeners: [ObjectIdentifier : ScheduleMesgListener] = [:]
    private var totalsMesgListeners: [ObjectIdentifier : TotalsMesgListener] = [:]
    private var weightScaleMesgListeners: [ObjectIdentifier : WeightScaleMesgListener] = [:]
    private var bloodPressureMesgListeners: [ObjectIdentifier : BloodPressureMesgListener] = [:]
    private var monitoringInfoMesgListeners: [ObjectIdentifier : MonitoringInfoMesgListener] = [:]
    private var monitoringMesgListeners: [ObjectIdentifier : MonitoringMesgListener] = [:]
    private var monitoringHrDataMesgListeners: [ObjectIdentifier : MonitoringHrDataMesgListener] = [:]
    private var spo2DataMesgListeners: [ObjectIdentifier : Spo2DataMesgListener] = [:]
    private var hrMesgListeners: [ObjectIdentifier : HrMesgListener] = [:]
    private var stressLevelMesgListeners: [ObjectIdentifier : StressLevelMesgListener] = [:]
    private var maxMetDataMesgListeners: [ObjectIdentifier : MaxMetDataMesgListener] = [:]
    private var hsaBodyBatteryDataMesgListeners: [ObjectIdentifier : HsaBodyBatteryDataMesgListener] = [:]
    private var hsaEventMesgListeners: [ObjectIdentifier : HsaEventMesgListener] = [:]
    private var hsaAccelerometerDataMesgListeners: [ObjectIdentifier : HsaAccelerometerDataMesgListener] = [:]
    private var hsaGyroscopeDataMesgListeners: [ObjectIdentifier : HsaGyroscopeDataMesgListener] = [:]
    private var hsaStepDataMesgListeners: [ObjectIdentifier : HsaStepDataMesgListener] = [:]
    private var hsaSpo2DataMesgListeners: [ObjectIdentifier : HsaSpo2DataMesgListener] = [:]
    private var hsaStressDataMesgListeners: [ObjectIdentifier : HsaStressDataMesgListener] = [:]
    private var hsaRespirationDataMesgListeners: [ObjectIdentifier : HsaRespirationDataMesgListener] = [:]
    private var hsaHeartRateDataMesgListeners: [ObjectIdentifier : HsaHeartRateDataMesgListener] = [:]
    private var hsaConfigurationDataMesgListeners: [ObjectIdentifier : HsaConfigurationDataMesgListener] = [:]
    private var hsaWristTemperatureDataMesgListeners: [ObjectIdentifier : HsaWristTemperatureDataMesgListener] = [:]
    private var memoGlobMesgListeners: [ObjectIdentifier : MemoGlobMesgListener] = [:]
    private var sleepLevelMesgListeners: [ObjectIdentifier : SleepLevelMesgListener] = [:]
    private var antChannelIdMesgListeners: [ObjectIdentifier : AntChannelIdMesgListener] = [:]
    private var antRxMesgListeners: [ObjectIdentifier : AntRxMesgListener] = [:]
    private var antTxMesgListeners: [ObjectIdentifier : AntTxMesgListener] = [:]
    private var exdScreenConfigurationMesgListeners: [ObjectIdentifier : ExdScreenConfigurationMesgListener] = [:]
    private var exdDataFieldConfigurationMesgListeners: [ObjectIdentifier : ExdDataFieldConfigurationMesgListener] = [:]
    private var exdDataConceptConfigurationMesgListeners: [ObjectIdentifier : ExdDataConceptConfigurationMesgListener] = [:]
    private var diveSummaryMesgListeners: [ObjectIdentifier : DiveSummaryMesgListener] = [:]
    private var aadAccelFeaturesMesgListeners: [ObjectIdentifier : AadAccelFeaturesMesgListener] = [:]
    private var hrvMesgListeners: [ObjectIdentifier : HrvMesgListener] = [:]
    private var beatIntervalsMesgListeners: [ObjectIdentifier : BeatIntervalsMesgListener] = [:]
    private var hrvStatusSummaryMesgListeners: [ObjectIdentifier : HrvStatusSummaryMesgListener] = [:]
    private var hrvValueMesgListeners: [ObjectIdentifier : HrvValueMesgListener] = [:]
    private var rawBbiMesgListeners: [ObjectIdentifier : RawBbiMesgListener] = [:]
    private var respirationRateMesgListeners: [ObjectIdentifier : RespirationRateMesgListener] = [:]
    private var chronoShotSessionMesgListeners: [ObjectIdentifier : ChronoShotSessionMesgListener] = [:]
    private var chronoShotDataMesgListeners: [ObjectIdentifier : ChronoShotDataMesgListener] = [:]
    private var tankUpdateMesgListeners: [ObjectIdentifier : TankUpdateMesgListener] = [:]
    private var tankSummaryMesgListeners: [ObjectIdentifier : TankSummaryMesgListener] = [:]
    private var sleepAssessmentMesgListeners: [ObjectIdentifier : SleepAssessmentMesgListener] = [:]
    private var skinTempOvernightMesgListeners: [ObjectIdentifier : SkinTempOvernightMesgListener] = [:]
    private var padMesgListeners: [ObjectIdentifier : PadMesgListener] = [:]

    public init() {}

    public func addListener(_ listener: FileIdMesgListener) {
        let id = ObjectIdentifier(listener)
        fileIdMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: FileIdMesgListener) {
        let id = ObjectIdentifier(listener)
        fileIdMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: FileCreatorMesgListener) {
        let id = ObjectIdentifier(listener)
        fileCreatorMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: FileCreatorMesgListener) {
        let id = ObjectIdentifier(listener)
        fileCreatorMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: TimestampCorrelationMesgListener) {
        let id = ObjectIdentifier(listener)
        timestampCorrelationMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: TimestampCorrelationMesgListener) {
        let id = ObjectIdentifier(listener)
        timestampCorrelationMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SoftwareMesgListener) {
        let id = ObjectIdentifier(listener)
        softwareMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SoftwareMesgListener) {
        let id = ObjectIdentifier(listener)
        softwareMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SlaveDeviceMesgListener) {
        let id = ObjectIdentifier(listener)
        slaveDeviceMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SlaveDeviceMesgListener) {
        let id = ObjectIdentifier(listener)
        slaveDeviceMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: CapabilitiesMesgListener) {
        let id = ObjectIdentifier(listener)
        capabilitiesMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: CapabilitiesMesgListener) {
        let id = ObjectIdentifier(listener)
        capabilitiesMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: FileCapabilitiesMesgListener) {
        let id = ObjectIdentifier(listener)
        fileCapabilitiesMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: FileCapabilitiesMesgListener) {
        let id = ObjectIdentifier(listener)
        fileCapabilitiesMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: MesgCapabilitiesMesgListener) {
        let id = ObjectIdentifier(listener)
        mesgCapabilitiesMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: MesgCapabilitiesMesgListener) {
        let id = ObjectIdentifier(listener)
        mesgCapabilitiesMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: FieldCapabilitiesMesgListener) {
        let id = ObjectIdentifier(listener)
        fieldCapabilitiesMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: FieldCapabilitiesMesgListener) {
        let id = ObjectIdentifier(listener)
        fieldCapabilitiesMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: DeviceSettingsMesgListener) {
        let id = ObjectIdentifier(listener)
        deviceSettingsMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: DeviceSettingsMesgListener) {
        let id = ObjectIdentifier(listener)
        deviceSettingsMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: UserProfileMesgListener) {
        let id = ObjectIdentifier(listener)
        userProfileMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: UserProfileMesgListener) {
        let id = ObjectIdentifier(listener)
        userProfileMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HrmProfileMesgListener) {
        let id = ObjectIdentifier(listener)
        hrmProfileMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HrmProfileMesgListener) {
        let id = ObjectIdentifier(listener)
        hrmProfileMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SdmProfileMesgListener) {
        let id = ObjectIdentifier(listener)
        sdmProfileMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SdmProfileMesgListener) {
        let id = ObjectIdentifier(listener)
        sdmProfileMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: BikeProfileMesgListener) {
        let id = ObjectIdentifier(listener)
        bikeProfileMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: BikeProfileMesgListener) {
        let id = ObjectIdentifier(listener)
        bikeProfileMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ConnectivityMesgListener) {
        let id = ObjectIdentifier(listener)
        connectivityMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ConnectivityMesgListener) {
        let id = ObjectIdentifier(listener)
        connectivityMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: WatchfaceSettingsMesgListener) {
        let id = ObjectIdentifier(listener)
        watchfaceSettingsMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: WatchfaceSettingsMesgListener) {
        let id = ObjectIdentifier(listener)
        watchfaceSettingsMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: OhrSettingsMesgListener) {
        let id = ObjectIdentifier(listener)
        ohrSettingsMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: OhrSettingsMesgListener) {
        let id = ObjectIdentifier(listener)
        ohrSettingsMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: TimeInZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        timeInZoneMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: TimeInZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        timeInZoneMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ZonesTargetMesgListener) {
        let id = ObjectIdentifier(listener)
        zonesTargetMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ZonesTargetMesgListener) {
        let id = ObjectIdentifier(listener)
        zonesTargetMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SportMesgListener) {
        let id = ObjectIdentifier(listener)
        sportMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SportMesgListener) {
        let id = ObjectIdentifier(listener)
        sportMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HrZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        hrZoneMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HrZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        hrZoneMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SpeedZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        speedZoneMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SpeedZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        speedZoneMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: CadenceZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        cadenceZoneMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: CadenceZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        cadenceZoneMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: PowerZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        powerZoneMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: PowerZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        powerZoneMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: MetZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        metZoneMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: MetZoneMesgListener) {
        let id = ObjectIdentifier(listener)
        metZoneMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: TrainingSettingsMesgListener) {
        let id = ObjectIdentifier(listener)
        trainingSettingsMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: TrainingSettingsMesgListener) {
        let id = ObjectIdentifier(listener)
        trainingSettingsMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: DiveSettingsMesgListener) {
        let id = ObjectIdentifier(listener)
        diveSettingsMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: DiveSettingsMesgListener) {
        let id = ObjectIdentifier(listener)
        diveSettingsMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: DiveAlarmMesgListener) {
        let id = ObjectIdentifier(listener)
        diveAlarmMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: DiveAlarmMesgListener) {
        let id = ObjectIdentifier(listener)
        diveAlarmMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: DiveApneaAlarmMesgListener) {
        let id = ObjectIdentifier(listener)
        diveApneaAlarmMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: DiveApneaAlarmMesgListener) {
        let id = ObjectIdentifier(listener)
        diveApneaAlarmMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: DiveGasMesgListener) {
        let id = ObjectIdentifier(listener)
        diveGasMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: DiveGasMesgListener) {
        let id = ObjectIdentifier(listener)
        diveGasMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: GoalMesgListener) {
        let id = ObjectIdentifier(listener)
        goalMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: GoalMesgListener) {
        let id = ObjectIdentifier(listener)
        goalMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ActivityMesgListener) {
        let id = ObjectIdentifier(listener)
        activityMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ActivityMesgListener) {
        let id = ObjectIdentifier(listener)
        activityMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SessionMesgListener) {
        let id = ObjectIdentifier(listener)
        sessionMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SessionMesgListener) {
        let id = ObjectIdentifier(listener)
        sessionMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: LapMesgListener) {
        let id = ObjectIdentifier(listener)
        lapMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: LapMesgListener) {
        let id = ObjectIdentifier(listener)
        lapMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: LengthMesgListener) {
        let id = ObjectIdentifier(listener)
        lengthMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: LengthMesgListener) {
        let id = ObjectIdentifier(listener)
        lengthMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: RecordMesgListener) {
        let id = ObjectIdentifier(listener)
        recordMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: RecordMesgListener) {
        let id = ObjectIdentifier(listener)
        recordMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: EventMesgListener) {
        let id = ObjectIdentifier(listener)
        eventMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: EventMesgListener) {
        let id = ObjectIdentifier(listener)
        eventMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: DeviceInfoMesgListener) {
        let id = ObjectIdentifier(listener)
        deviceInfoMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: DeviceInfoMesgListener) {
        let id = ObjectIdentifier(listener)
        deviceInfoMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: DeviceAuxBatteryInfoMesgListener) {
        let id = ObjectIdentifier(listener)
        deviceAuxBatteryInfoMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: DeviceAuxBatteryInfoMesgListener) {
        let id = ObjectIdentifier(listener)
        deviceAuxBatteryInfoMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: TrainingFileMesgListener) {
        let id = ObjectIdentifier(listener)
        trainingFileMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: TrainingFileMesgListener) {
        let id = ObjectIdentifier(listener)
        trainingFileMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: WeatherConditionsMesgListener) {
        let id = ObjectIdentifier(listener)
        weatherConditionsMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: WeatherConditionsMesgListener) {
        let id = ObjectIdentifier(listener)
        weatherConditionsMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: WeatherAlertMesgListener) {
        let id = ObjectIdentifier(listener)
        weatherAlertMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: WeatherAlertMesgListener) {
        let id = ObjectIdentifier(listener)
        weatherAlertMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: GpsMetadataMesgListener) {
        let id = ObjectIdentifier(listener)
        gpsMetadataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: GpsMetadataMesgListener) {
        let id = ObjectIdentifier(listener)
        gpsMetadataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: CameraEventMesgListener) {
        let id = ObjectIdentifier(listener)
        cameraEventMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: CameraEventMesgListener) {
        let id = ObjectIdentifier(listener)
        cameraEventMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: GyroscopeDataMesgListener) {
        let id = ObjectIdentifier(listener)
        gyroscopeDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: GyroscopeDataMesgListener) {
        let id = ObjectIdentifier(listener)
        gyroscopeDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: AccelerometerDataMesgListener) {
        let id = ObjectIdentifier(listener)
        accelerometerDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: AccelerometerDataMesgListener) {
        let id = ObjectIdentifier(listener)
        accelerometerDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: MagnetometerDataMesgListener) {
        let id = ObjectIdentifier(listener)
        magnetometerDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: MagnetometerDataMesgListener) {
        let id = ObjectIdentifier(listener)
        magnetometerDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: BarometerDataMesgListener) {
        let id = ObjectIdentifier(listener)
        barometerDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: BarometerDataMesgListener) {
        let id = ObjectIdentifier(listener)
        barometerDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ThreeDSensorCalibrationMesgListener) {
        let id = ObjectIdentifier(listener)
        threeDSensorCalibrationMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ThreeDSensorCalibrationMesgListener) {
        let id = ObjectIdentifier(listener)
        threeDSensorCalibrationMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: OneDSensorCalibrationMesgListener) {
        let id = ObjectIdentifier(listener)
        oneDSensorCalibrationMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: OneDSensorCalibrationMesgListener) {
        let id = ObjectIdentifier(listener)
        oneDSensorCalibrationMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: VideoFrameMesgListener) {
        let id = ObjectIdentifier(listener)
        videoFrameMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: VideoFrameMesgListener) {
        let id = ObjectIdentifier(listener)
        videoFrameMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ObdiiDataMesgListener) {
        let id = ObjectIdentifier(listener)
        obdiiDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ObdiiDataMesgListener) {
        let id = ObjectIdentifier(listener)
        obdiiDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: NmeaSentenceMesgListener) {
        let id = ObjectIdentifier(listener)
        nmeaSentenceMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: NmeaSentenceMesgListener) {
        let id = ObjectIdentifier(listener)
        nmeaSentenceMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: AviationAttitudeMesgListener) {
        let id = ObjectIdentifier(listener)
        aviationAttitudeMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: AviationAttitudeMesgListener) {
        let id = ObjectIdentifier(listener)
        aviationAttitudeMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: VideoMesgListener) {
        let id = ObjectIdentifier(listener)
        videoMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: VideoMesgListener) {
        let id = ObjectIdentifier(listener)
        videoMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: VideoTitleMesgListener) {
        let id = ObjectIdentifier(listener)
        videoTitleMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: VideoTitleMesgListener) {
        let id = ObjectIdentifier(listener)
        videoTitleMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: VideoDescriptionMesgListener) {
        let id = ObjectIdentifier(listener)
        videoDescriptionMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: VideoDescriptionMesgListener) {
        let id = ObjectIdentifier(listener)
        videoDescriptionMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: VideoClipMesgListener) {
        let id = ObjectIdentifier(listener)
        videoClipMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: VideoClipMesgListener) {
        let id = ObjectIdentifier(listener)
        videoClipMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SetMesgListener) {
        let id = ObjectIdentifier(listener)
        setMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SetMesgListener) {
        let id = ObjectIdentifier(listener)
        setMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: JumpMesgListener) {
        let id = ObjectIdentifier(listener)
        jumpMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: JumpMesgListener) {
        let id = ObjectIdentifier(listener)
        jumpMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SplitMesgListener) {
        let id = ObjectIdentifier(listener)
        splitMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SplitMesgListener) {
        let id = ObjectIdentifier(listener)
        splitMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SplitSummaryMesgListener) {
        let id = ObjectIdentifier(listener)
        splitSummaryMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SplitSummaryMesgListener) {
        let id = ObjectIdentifier(listener)
        splitSummaryMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ClimbProMesgListener) {
        let id = ObjectIdentifier(listener)
        climbProMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ClimbProMesgListener) {
        let id = ObjectIdentifier(listener)
        climbProMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: FieldDescriptionMesgListener) {
        let id = ObjectIdentifier(listener)
        fieldDescriptionMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: FieldDescriptionMesgListener) {
        let id = ObjectIdentifier(listener)
        fieldDescriptionMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: DeveloperDataIdMesgListener) {
        let id = ObjectIdentifier(listener)
        developerDataIdMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: DeveloperDataIdMesgListener) {
        let id = ObjectIdentifier(listener)
        developerDataIdMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: CourseMesgListener) {
        let id = ObjectIdentifier(listener)
        courseMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: CourseMesgListener) {
        let id = ObjectIdentifier(listener)
        courseMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: CoursePointMesgListener) {
        let id = ObjectIdentifier(listener)
        coursePointMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: CoursePointMesgListener) {
        let id = ObjectIdentifier(listener)
        coursePointMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SegmentIdMesgListener) {
        let id = ObjectIdentifier(listener)
        segmentIdMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SegmentIdMesgListener) {
        let id = ObjectIdentifier(listener)
        segmentIdMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SegmentLeaderboardEntryMesgListener) {
        let id = ObjectIdentifier(listener)
        segmentLeaderboardEntryMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SegmentLeaderboardEntryMesgListener) {
        let id = ObjectIdentifier(listener)
        segmentLeaderboardEntryMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SegmentPointMesgListener) {
        let id = ObjectIdentifier(listener)
        segmentPointMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SegmentPointMesgListener) {
        let id = ObjectIdentifier(listener)
        segmentPointMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SegmentLapMesgListener) {
        let id = ObjectIdentifier(listener)
        segmentLapMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SegmentLapMesgListener) {
        let id = ObjectIdentifier(listener)
        segmentLapMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SegmentFileMesgListener) {
        let id = ObjectIdentifier(listener)
        segmentFileMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SegmentFileMesgListener) {
        let id = ObjectIdentifier(listener)
        segmentFileMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: WorkoutMesgListener) {
        let id = ObjectIdentifier(listener)
        workoutMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: WorkoutMesgListener) {
        let id = ObjectIdentifier(listener)
        workoutMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: WorkoutSessionMesgListener) {
        let id = ObjectIdentifier(listener)
        workoutSessionMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: WorkoutSessionMesgListener) {
        let id = ObjectIdentifier(listener)
        workoutSessionMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: WorkoutStepMesgListener) {
        let id = ObjectIdentifier(listener)
        workoutStepMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: WorkoutStepMesgListener) {
        let id = ObjectIdentifier(listener)
        workoutStepMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ExerciseTitleMesgListener) {
        let id = ObjectIdentifier(listener)
        exerciseTitleMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ExerciseTitleMesgListener) {
        let id = ObjectIdentifier(listener)
        exerciseTitleMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ScheduleMesgListener) {
        let id = ObjectIdentifier(listener)
        scheduleMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ScheduleMesgListener) {
        let id = ObjectIdentifier(listener)
        scheduleMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: TotalsMesgListener) {
        let id = ObjectIdentifier(listener)
        totalsMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: TotalsMesgListener) {
        let id = ObjectIdentifier(listener)
        totalsMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: WeightScaleMesgListener) {
        let id = ObjectIdentifier(listener)
        weightScaleMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: WeightScaleMesgListener) {
        let id = ObjectIdentifier(listener)
        weightScaleMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: BloodPressureMesgListener) {
        let id = ObjectIdentifier(listener)
        bloodPressureMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: BloodPressureMesgListener) {
        let id = ObjectIdentifier(listener)
        bloodPressureMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: MonitoringInfoMesgListener) {
        let id = ObjectIdentifier(listener)
        monitoringInfoMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: MonitoringInfoMesgListener) {
        let id = ObjectIdentifier(listener)
        monitoringInfoMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: MonitoringMesgListener) {
        let id = ObjectIdentifier(listener)
        monitoringMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: MonitoringMesgListener) {
        let id = ObjectIdentifier(listener)
        monitoringMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: MonitoringHrDataMesgListener) {
        let id = ObjectIdentifier(listener)
        monitoringHrDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: MonitoringHrDataMesgListener) {
        let id = ObjectIdentifier(listener)
        monitoringHrDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: Spo2DataMesgListener) {
        let id = ObjectIdentifier(listener)
        spo2DataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: Spo2DataMesgListener) {
        let id = ObjectIdentifier(listener)
        spo2DataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HrMesgListener) {
        let id = ObjectIdentifier(listener)
        hrMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HrMesgListener) {
        let id = ObjectIdentifier(listener)
        hrMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: StressLevelMesgListener) {
        let id = ObjectIdentifier(listener)
        stressLevelMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: StressLevelMesgListener) {
        let id = ObjectIdentifier(listener)
        stressLevelMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: MaxMetDataMesgListener) {
        let id = ObjectIdentifier(listener)
        maxMetDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: MaxMetDataMesgListener) {
        let id = ObjectIdentifier(listener)
        maxMetDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaBodyBatteryDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaBodyBatteryDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaBodyBatteryDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaBodyBatteryDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaEventMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaEventMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaEventMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaEventMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaAccelerometerDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaAccelerometerDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaAccelerometerDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaAccelerometerDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaGyroscopeDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaGyroscopeDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaGyroscopeDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaGyroscopeDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaStepDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaStepDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaStepDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaStepDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaSpo2DataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaSpo2DataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaSpo2DataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaSpo2DataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaStressDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaStressDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaStressDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaStressDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaRespirationDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaRespirationDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaRespirationDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaRespirationDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaHeartRateDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaHeartRateDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaHeartRateDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaHeartRateDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaConfigurationDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaConfigurationDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaConfigurationDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaConfigurationDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HsaWristTemperatureDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaWristTemperatureDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HsaWristTemperatureDataMesgListener) {
        let id = ObjectIdentifier(listener)
        hsaWristTemperatureDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: MemoGlobMesgListener) {
        let id = ObjectIdentifier(listener)
        memoGlobMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: MemoGlobMesgListener) {
        let id = ObjectIdentifier(listener)
        memoGlobMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SleepLevelMesgListener) {
        let id = ObjectIdentifier(listener)
        sleepLevelMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SleepLevelMesgListener) {
        let id = ObjectIdentifier(listener)
        sleepLevelMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: AntChannelIdMesgListener) {
        let id = ObjectIdentifier(listener)
        antChannelIdMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: AntChannelIdMesgListener) {
        let id = ObjectIdentifier(listener)
        antChannelIdMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: AntRxMesgListener) {
        let id = ObjectIdentifier(listener)
        antRxMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: AntRxMesgListener) {
        let id = ObjectIdentifier(listener)
        antRxMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: AntTxMesgListener) {
        let id = ObjectIdentifier(listener)
        antTxMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: AntTxMesgListener) {
        let id = ObjectIdentifier(listener)
        antTxMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ExdScreenConfigurationMesgListener) {
        let id = ObjectIdentifier(listener)
        exdScreenConfigurationMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ExdScreenConfigurationMesgListener) {
        let id = ObjectIdentifier(listener)
        exdScreenConfigurationMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ExdDataFieldConfigurationMesgListener) {
        let id = ObjectIdentifier(listener)
        exdDataFieldConfigurationMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ExdDataFieldConfigurationMesgListener) {
        let id = ObjectIdentifier(listener)
        exdDataFieldConfigurationMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ExdDataConceptConfigurationMesgListener) {
        let id = ObjectIdentifier(listener)
        exdDataConceptConfigurationMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ExdDataConceptConfigurationMesgListener) {
        let id = ObjectIdentifier(listener)
        exdDataConceptConfigurationMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: DiveSummaryMesgListener) {
        let id = ObjectIdentifier(listener)
        diveSummaryMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: DiveSummaryMesgListener) {
        let id = ObjectIdentifier(listener)
        diveSummaryMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: AadAccelFeaturesMesgListener) {
        let id = ObjectIdentifier(listener)
        aadAccelFeaturesMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: AadAccelFeaturesMesgListener) {
        let id = ObjectIdentifier(listener)
        aadAccelFeaturesMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HrvMesgListener) {
        let id = ObjectIdentifier(listener)
        hrvMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HrvMesgListener) {
        let id = ObjectIdentifier(listener)
        hrvMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: BeatIntervalsMesgListener) {
        let id = ObjectIdentifier(listener)
        beatIntervalsMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: BeatIntervalsMesgListener) {
        let id = ObjectIdentifier(listener)
        beatIntervalsMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HrvStatusSummaryMesgListener) {
        let id = ObjectIdentifier(listener)
        hrvStatusSummaryMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HrvStatusSummaryMesgListener) {
        let id = ObjectIdentifier(listener)
        hrvStatusSummaryMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: HrvValueMesgListener) {
        let id = ObjectIdentifier(listener)
        hrvValueMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: HrvValueMesgListener) {
        let id = ObjectIdentifier(listener)
        hrvValueMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: RawBbiMesgListener) {
        let id = ObjectIdentifier(listener)
        rawBbiMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: RawBbiMesgListener) {
        let id = ObjectIdentifier(listener)
        rawBbiMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: RespirationRateMesgListener) {
        let id = ObjectIdentifier(listener)
        respirationRateMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: RespirationRateMesgListener) {
        let id = ObjectIdentifier(listener)
        respirationRateMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ChronoShotSessionMesgListener) {
        let id = ObjectIdentifier(listener)
        chronoShotSessionMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ChronoShotSessionMesgListener) {
        let id = ObjectIdentifier(listener)
        chronoShotSessionMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: ChronoShotDataMesgListener) {
        let id = ObjectIdentifier(listener)
        chronoShotDataMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: ChronoShotDataMesgListener) {
        let id = ObjectIdentifier(listener)
        chronoShotDataMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: TankUpdateMesgListener) {
        let id = ObjectIdentifier(listener)
        tankUpdateMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: TankUpdateMesgListener) {
        let id = ObjectIdentifier(listener)
        tankUpdateMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: TankSummaryMesgListener) {
        let id = ObjectIdentifier(listener)
        tankSummaryMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: TankSummaryMesgListener) {
        let id = ObjectIdentifier(listener)
        tankSummaryMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SleepAssessmentMesgListener) {
        let id = ObjectIdentifier(listener)
        sleepAssessmentMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SleepAssessmentMesgListener) {
        let id = ObjectIdentifier(listener)
        sleepAssessmentMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: SkinTempOvernightMesgListener) {
        let id = ObjectIdentifier(listener)
        skinTempOvernightMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: SkinTempOvernightMesgListener) {
        let id = ObjectIdentifier(listener)
        skinTempOvernightMesgListeners.removeValue(forKey: id)
    }

    public func addListener(_ listener: PadMesgListener) {
        let id = ObjectIdentifier(listener)
        padMesgListeners[id] = listener
    }
    
    public func removeListener(_ listener: PadMesgListener) {
        let id = ObjectIdentifier(listener)
        padMesgListeners.removeValue(forKey: id)
    }
    
    public func onMesg(_ mesg: Mesg) {
        switch(MesgNum(rawValue: mesg.mesgNum)!) {
        case .fileId:
            if (self.fileIdMesgListeners.count == 0) {
                return
            }

            let fileIdMesg = FileIdMesg(mesg: mesg)
            self.fileIdMesgListeners.values.forEach { $0.onMesg(fileIdMesg) }
            return
        case .fileCreator:
            if (self.fileCreatorMesgListeners.count == 0) {
                return
            }

            let fileCreatorMesg = FileCreatorMesg(mesg: mesg)
            self.fileCreatorMesgListeners.values.forEach { $0.onMesg(fileCreatorMesg) }
            return
        case .timestampCorrelation:
            if (self.timestampCorrelationMesgListeners.count == 0) {
                return
            }

            let timestampCorrelationMesg = TimestampCorrelationMesg(mesg: mesg)
            self.timestampCorrelationMesgListeners.values.forEach { $0.onMesg(timestampCorrelationMesg) }
            return
        case .software:
            if (self.softwareMesgListeners.count == 0) {
                return
            }

            let softwareMesg = SoftwareMesg(mesg: mesg)
            self.softwareMesgListeners.values.forEach { $0.onMesg(softwareMesg) }
            return
        case .slaveDevice:
            if (self.slaveDeviceMesgListeners.count == 0) {
                return
            }

            let slaveDeviceMesg = SlaveDeviceMesg(mesg: mesg)
            self.slaveDeviceMesgListeners.values.forEach { $0.onMesg(slaveDeviceMesg) }
            return
        case .capabilities:
            if (self.capabilitiesMesgListeners.count == 0) {
                return
            }

            let capabilitiesMesg = CapabilitiesMesg(mesg: mesg)
            self.capabilitiesMesgListeners.values.forEach { $0.onMesg(capabilitiesMesg) }
            return
        case .fileCapabilities:
            if (self.fileCapabilitiesMesgListeners.count == 0) {
                return
            }

            let fileCapabilitiesMesg = FileCapabilitiesMesg(mesg: mesg)
            self.fileCapabilitiesMesgListeners.values.forEach { $0.onMesg(fileCapabilitiesMesg) }
            return
        case .mesgCapabilities:
            if (self.mesgCapabilitiesMesgListeners.count == 0) {
                return
            }

            let mesgCapabilitiesMesg = MesgCapabilitiesMesg(mesg: mesg)
            self.mesgCapabilitiesMesgListeners.values.forEach { $0.onMesg(mesgCapabilitiesMesg) }
            return
        case .fieldCapabilities:
            if (self.fieldCapabilitiesMesgListeners.count == 0) {
                return
            }

            let fieldCapabilitiesMesg = FieldCapabilitiesMesg(mesg: mesg)
            self.fieldCapabilitiesMesgListeners.values.forEach { $0.onMesg(fieldCapabilitiesMesg) }
            return
        case .deviceSettings:
            if (self.deviceSettingsMesgListeners.count == 0) {
                return
            }

            let deviceSettingsMesg = DeviceSettingsMesg(mesg: mesg)
            self.deviceSettingsMesgListeners.values.forEach { $0.onMesg(deviceSettingsMesg) }
            return
        case .userProfile:
            if (self.userProfileMesgListeners.count == 0) {
                return
            }

            let userProfileMesg = UserProfileMesg(mesg: mesg)
            self.userProfileMesgListeners.values.forEach { $0.onMesg(userProfileMesg) }
            return
        case .hrmProfile:
            if (self.hrmProfileMesgListeners.count == 0) {
                return
            }

            let hrmProfileMesg = HrmProfileMesg(mesg: mesg)
            self.hrmProfileMesgListeners.values.forEach { $0.onMesg(hrmProfileMesg) }
            return
        case .sdmProfile:
            if (self.sdmProfileMesgListeners.count == 0) {
                return
            }

            let sdmProfileMesg = SdmProfileMesg(mesg: mesg)
            self.sdmProfileMesgListeners.values.forEach { $0.onMesg(sdmProfileMesg) }
            return
        case .bikeProfile:
            if (self.bikeProfileMesgListeners.count == 0) {
                return
            }

            let bikeProfileMesg = BikeProfileMesg(mesg: mesg)
            self.bikeProfileMesgListeners.values.forEach { $0.onMesg(bikeProfileMesg) }
            return
        case .connectivity:
            if (self.connectivityMesgListeners.count == 0) {
                return
            }

            let connectivityMesg = ConnectivityMesg(mesg: mesg)
            self.connectivityMesgListeners.values.forEach { $0.onMesg(connectivityMesg) }
            return
        case .watchfaceSettings:
            if (self.watchfaceSettingsMesgListeners.count == 0) {
                return
            }

            let watchfaceSettingsMesg = WatchfaceSettingsMesg(mesg: mesg)
            self.watchfaceSettingsMesgListeners.values.forEach { $0.onMesg(watchfaceSettingsMesg) }
            return
        case .ohrSettings:
            if (self.ohrSettingsMesgListeners.count == 0) {
                return
            }

            let ohrSettingsMesg = OhrSettingsMesg(mesg: mesg)
            self.ohrSettingsMesgListeners.values.forEach { $0.onMesg(ohrSettingsMesg) }
            return
        case .timeInZone:
            if (self.timeInZoneMesgListeners.count == 0) {
                return
            }

            let timeInZoneMesg = TimeInZoneMesg(mesg: mesg)
            self.timeInZoneMesgListeners.values.forEach { $0.onMesg(timeInZoneMesg) }
            return
        case .zonesTarget:
            if (self.zonesTargetMesgListeners.count == 0) {
                return
            }

            let zonesTargetMesg = ZonesTargetMesg(mesg: mesg)
            self.zonesTargetMesgListeners.values.forEach { $0.onMesg(zonesTargetMesg) }
            return
        case .sport:
            if (self.sportMesgListeners.count == 0) {
                return
            }

            let sportMesg = SportMesg(mesg: mesg)
            self.sportMesgListeners.values.forEach { $0.onMesg(sportMesg) }
            return
        case .hrZone:
            if (self.hrZoneMesgListeners.count == 0) {
                return
            }

            let hrZoneMesg = HrZoneMesg(mesg: mesg)
            self.hrZoneMesgListeners.values.forEach { $0.onMesg(hrZoneMesg) }
            return
        case .speedZone:
            if (self.speedZoneMesgListeners.count == 0) {
                return
            }

            let speedZoneMesg = SpeedZoneMesg(mesg: mesg)
            self.speedZoneMesgListeners.values.forEach { $0.onMesg(speedZoneMesg) }
            return
        case .cadenceZone:
            if (self.cadenceZoneMesgListeners.count == 0) {
                return
            }

            let cadenceZoneMesg = CadenceZoneMesg(mesg: mesg)
            self.cadenceZoneMesgListeners.values.forEach { $0.onMesg(cadenceZoneMesg) }
            return
        case .powerZone:
            if (self.powerZoneMesgListeners.count == 0) {
                return
            }

            let powerZoneMesg = PowerZoneMesg(mesg: mesg)
            self.powerZoneMesgListeners.values.forEach { $0.onMesg(powerZoneMesg) }
            return
        case .metZone:
            if (self.metZoneMesgListeners.count == 0) {
                return
            }

            let metZoneMesg = MetZoneMesg(mesg: mesg)
            self.metZoneMesgListeners.values.forEach { $0.onMesg(metZoneMesg) }
            return
        case .trainingSettings:
            if (self.trainingSettingsMesgListeners.count == 0) {
                return
            }

            let trainingSettingsMesg = TrainingSettingsMesg(mesg: mesg)
            self.trainingSettingsMesgListeners.values.forEach { $0.onMesg(trainingSettingsMesg) }
            return
        case .diveSettings:
            if (self.diveSettingsMesgListeners.count == 0) {
                return
            }

            let diveSettingsMesg = DiveSettingsMesg(mesg: mesg)
            self.diveSettingsMesgListeners.values.forEach { $0.onMesg(diveSettingsMesg) }
            return
        case .diveAlarm:
            if (self.diveAlarmMesgListeners.count == 0) {
                return
            }

            let diveAlarmMesg = DiveAlarmMesg(mesg: mesg)
            self.diveAlarmMesgListeners.values.forEach { $0.onMesg(diveAlarmMesg) }
            return
        case .diveApneaAlarm:
            if (self.diveApneaAlarmMesgListeners.count == 0) {
                return
            }

            let diveApneaAlarmMesg = DiveApneaAlarmMesg(mesg: mesg)
            self.diveApneaAlarmMesgListeners.values.forEach { $0.onMesg(diveApneaAlarmMesg) }
            return
        case .diveGas:
            if (self.diveGasMesgListeners.count == 0) {
                return
            }

            let diveGasMesg = DiveGasMesg(mesg: mesg)
            self.diveGasMesgListeners.values.forEach { $0.onMesg(diveGasMesg) }
            return
        case .goal:
            if (self.goalMesgListeners.count == 0) {
                return
            }

            let goalMesg = GoalMesg(mesg: mesg)
            self.goalMesgListeners.values.forEach { $0.onMesg(goalMesg) }
            return
        case .activity:
            if (self.activityMesgListeners.count == 0) {
                return
            }

            let activityMesg = ActivityMesg(mesg: mesg)
            self.activityMesgListeners.values.forEach { $0.onMesg(activityMesg) }
            return
        case .session:
            if (self.sessionMesgListeners.count == 0) {
                return
            }

            let sessionMesg = SessionMesg(mesg: mesg)
            self.sessionMesgListeners.values.forEach { $0.onMesg(sessionMesg) }
            return
        case .lap:
            if (self.lapMesgListeners.count == 0) {
                return
            }

            let lapMesg = LapMesg(mesg: mesg)
            self.lapMesgListeners.values.forEach { $0.onMesg(lapMesg) }
            return
        case .length:
            if (self.lengthMesgListeners.count == 0) {
                return
            }

            let lengthMesg = LengthMesg(mesg: mesg)
            self.lengthMesgListeners.values.forEach { $0.onMesg(lengthMesg) }
            return
        case .record:
            if (self.recordMesgListeners.count == 0) {
                return
            }

            let recordMesg = RecordMesg(mesg: mesg)
            self.recordMesgListeners.values.forEach { $0.onMesg(recordMesg) }
            return
        case .event:
            if (self.eventMesgListeners.count == 0) {
                return
            }

            let eventMesg = EventMesg(mesg: mesg)
            self.eventMesgListeners.values.forEach { $0.onMesg(eventMesg) }
            return
        case .deviceInfo:
            if (self.deviceInfoMesgListeners.count == 0) {
                return
            }

            let deviceInfoMesg = DeviceInfoMesg(mesg: mesg)
            self.deviceInfoMesgListeners.values.forEach { $0.onMesg(deviceInfoMesg) }
            return
        case .deviceAuxBatteryInfo:
            if (self.deviceAuxBatteryInfoMesgListeners.count == 0) {
                return
            }

            let deviceAuxBatteryInfoMesg = DeviceAuxBatteryInfoMesg(mesg: mesg)
            self.deviceAuxBatteryInfoMesgListeners.values.forEach { $0.onMesg(deviceAuxBatteryInfoMesg) }
            return
        case .trainingFile:
            if (self.trainingFileMesgListeners.count == 0) {
                return
            }

            let trainingFileMesg = TrainingFileMesg(mesg: mesg)
            self.trainingFileMesgListeners.values.forEach { $0.onMesg(trainingFileMesg) }
            return
        case .weatherConditions:
            if (self.weatherConditionsMesgListeners.count == 0) {
                return
            }

            let weatherConditionsMesg = WeatherConditionsMesg(mesg: mesg)
            self.weatherConditionsMesgListeners.values.forEach { $0.onMesg(weatherConditionsMesg) }
            return
        case .weatherAlert:
            if (self.weatherAlertMesgListeners.count == 0) {
                return
            }

            let weatherAlertMesg = WeatherAlertMesg(mesg: mesg)
            self.weatherAlertMesgListeners.values.forEach { $0.onMesg(weatherAlertMesg) }
            return
        case .gpsMetadata:
            if (self.gpsMetadataMesgListeners.count == 0) {
                return
            }

            let gpsMetadataMesg = GpsMetadataMesg(mesg: mesg)
            self.gpsMetadataMesgListeners.values.forEach { $0.onMesg(gpsMetadataMesg) }
            return
        case .cameraEvent:
            if (self.cameraEventMesgListeners.count == 0) {
                return
            }

            let cameraEventMesg = CameraEventMesg(mesg: mesg)
            self.cameraEventMesgListeners.values.forEach { $0.onMesg(cameraEventMesg) }
            return
        case .gyroscopeData:
            if (self.gyroscopeDataMesgListeners.count == 0) {
                return
            }

            let gyroscopeDataMesg = GyroscopeDataMesg(mesg: mesg)
            self.gyroscopeDataMesgListeners.values.forEach { $0.onMesg(gyroscopeDataMesg) }
            return
        case .accelerometerData:
            if (self.accelerometerDataMesgListeners.count == 0) {
                return
            }

            let accelerometerDataMesg = AccelerometerDataMesg(mesg: mesg)
            self.accelerometerDataMesgListeners.values.forEach { $0.onMesg(accelerometerDataMesg) }
            return
        case .magnetometerData:
            if (self.magnetometerDataMesgListeners.count == 0) {
                return
            }

            let magnetometerDataMesg = MagnetometerDataMesg(mesg: mesg)
            self.magnetometerDataMesgListeners.values.forEach { $0.onMesg(magnetometerDataMesg) }
            return
        case .barometerData:
            if (self.barometerDataMesgListeners.count == 0) {
                return
            }

            let barometerDataMesg = BarometerDataMesg(mesg: mesg)
            self.barometerDataMesgListeners.values.forEach { $0.onMesg(barometerDataMesg) }
            return
        case .threeDSensorCalibration:
            if (self.threeDSensorCalibrationMesgListeners.count == 0) {
                return
            }

            let threeDSensorCalibrationMesg = ThreeDSensorCalibrationMesg(mesg: mesg)
            self.threeDSensorCalibrationMesgListeners.values.forEach { $0.onMesg(threeDSensorCalibrationMesg) }
            return
        case .oneDSensorCalibration:
            if (self.oneDSensorCalibrationMesgListeners.count == 0) {
                return
            }

            let oneDSensorCalibrationMesg = OneDSensorCalibrationMesg(mesg: mesg)
            self.oneDSensorCalibrationMesgListeners.values.forEach { $0.onMesg(oneDSensorCalibrationMesg) }
            return
        case .videoFrame:
            if (self.videoFrameMesgListeners.count == 0) {
                return
            }

            let videoFrameMesg = VideoFrameMesg(mesg: mesg)
            self.videoFrameMesgListeners.values.forEach { $0.onMesg(videoFrameMesg) }
            return
        case .obdiiData:
            if (self.obdiiDataMesgListeners.count == 0) {
                return
            }

            let obdiiDataMesg = ObdiiDataMesg(mesg: mesg)
            self.obdiiDataMesgListeners.values.forEach { $0.onMesg(obdiiDataMesg) }
            return
        case .nmeaSentence:
            if (self.nmeaSentenceMesgListeners.count == 0) {
                return
            }

            let nmeaSentenceMesg = NmeaSentenceMesg(mesg: mesg)
            self.nmeaSentenceMesgListeners.values.forEach { $0.onMesg(nmeaSentenceMesg) }
            return
        case .aviationAttitude:
            if (self.aviationAttitudeMesgListeners.count == 0) {
                return
            }

            let aviationAttitudeMesg = AviationAttitudeMesg(mesg: mesg)
            self.aviationAttitudeMesgListeners.values.forEach { $0.onMesg(aviationAttitudeMesg) }
            return
        case .video:
            if (self.videoMesgListeners.count == 0) {
                return
            }

            let videoMesg = VideoMesg(mesg: mesg)
            self.videoMesgListeners.values.forEach { $0.onMesg(videoMesg) }
            return
        case .videoTitle:
            if (self.videoTitleMesgListeners.count == 0) {
                return
            }

            let videoTitleMesg = VideoTitleMesg(mesg: mesg)
            self.videoTitleMesgListeners.values.forEach { $0.onMesg(videoTitleMesg) }
            return
        case .videoDescription:
            if (self.videoDescriptionMesgListeners.count == 0) {
                return
            }

            let videoDescriptionMesg = VideoDescriptionMesg(mesg: mesg)
            self.videoDescriptionMesgListeners.values.forEach { $0.onMesg(videoDescriptionMesg) }
            return
        case .videoClip:
            if (self.videoClipMesgListeners.count == 0) {
                return
            }

            let videoClipMesg = VideoClipMesg(mesg: mesg)
            self.videoClipMesgListeners.values.forEach { $0.onMesg(videoClipMesg) }
            return
        case .set:
            if (self.setMesgListeners.count == 0) {
                return
            }

            let setMesg = SetMesg(mesg: mesg)
            self.setMesgListeners.values.forEach { $0.onMesg(setMesg) }
            return
        case .jump:
            if (self.jumpMesgListeners.count == 0) {
                return
            }

            let jumpMesg = JumpMesg(mesg: mesg)
            self.jumpMesgListeners.values.forEach { $0.onMesg(jumpMesg) }
            return
        case .split:
            if (self.splitMesgListeners.count == 0) {
                return
            }

            let splitMesg = SplitMesg(mesg: mesg)
            self.splitMesgListeners.values.forEach { $0.onMesg(splitMesg) }
            return
        case .splitSummary:
            if (self.splitSummaryMesgListeners.count == 0) {
                return
            }

            let splitSummaryMesg = SplitSummaryMesg(mesg: mesg)
            self.splitSummaryMesgListeners.values.forEach { $0.onMesg(splitSummaryMesg) }
            return
        case .climbPro:
            if (self.climbProMesgListeners.count == 0) {
                return
            }

            let climbProMesg = ClimbProMesg(mesg: mesg)
            self.climbProMesgListeners.values.forEach { $0.onMesg(climbProMesg) }
            return
        case .fieldDescription:
            if (self.fieldDescriptionMesgListeners.count == 0) {
                return
            }

            let fieldDescriptionMesg = FieldDescriptionMesg(mesg: mesg)
            self.fieldDescriptionMesgListeners.values.forEach { $0.onMesg(fieldDescriptionMesg) }
            return
        case .developerDataId:
            if (self.developerDataIdMesgListeners.count == 0) {
                return
            }

            let developerDataIdMesg = DeveloperDataIdMesg(mesg: mesg)
            self.developerDataIdMesgListeners.values.forEach { $0.onMesg(developerDataIdMesg) }
            return
        case .course:
            if (self.courseMesgListeners.count == 0) {
                return
            }

            let courseMesg = CourseMesg(mesg: mesg)
            self.courseMesgListeners.values.forEach { $0.onMesg(courseMesg) }
            return
        case .coursePoint:
            if (self.coursePointMesgListeners.count == 0) {
                return
            }

            let coursePointMesg = CoursePointMesg(mesg: mesg)
            self.coursePointMesgListeners.values.forEach { $0.onMesg(coursePointMesg) }
            return
        case .segmentId:
            if (self.segmentIdMesgListeners.count == 0) {
                return
            }

            let segmentIdMesg = SegmentIdMesg(mesg: mesg)
            self.segmentIdMesgListeners.values.forEach { $0.onMesg(segmentIdMesg) }
            return
        case .segmentLeaderboardEntry:
            if (self.segmentLeaderboardEntryMesgListeners.count == 0) {
                return
            }

            let segmentLeaderboardEntryMesg = SegmentLeaderboardEntryMesg(mesg: mesg)
            self.segmentLeaderboardEntryMesgListeners.values.forEach { $0.onMesg(segmentLeaderboardEntryMesg) }
            return
        case .segmentPoint:
            if (self.segmentPointMesgListeners.count == 0) {
                return
            }

            let segmentPointMesg = SegmentPointMesg(mesg: mesg)
            self.segmentPointMesgListeners.values.forEach { $0.onMesg(segmentPointMesg) }
            return
        case .segmentLap:
            if (self.segmentLapMesgListeners.count == 0) {
                return
            }

            let segmentLapMesg = SegmentLapMesg(mesg: mesg)
            self.segmentLapMesgListeners.values.forEach { $0.onMesg(segmentLapMesg) }
            return
        case .segmentFile:
            if (self.segmentFileMesgListeners.count == 0) {
                return
            }

            let segmentFileMesg = SegmentFileMesg(mesg: mesg)
            self.segmentFileMesgListeners.values.forEach { $0.onMesg(segmentFileMesg) }
            return
        case .workout:
            if (self.workoutMesgListeners.count == 0) {
                return
            }

            let workoutMesg = WorkoutMesg(mesg: mesg)
            self.workoutMesgListeners.values.forEach { $0.onMesg(workoutMesg) }
            return
        case .workoutSession:
            if (self.workoutSessionMesgListeners.count == 0) {
                return
            }

            let workoutSessionMesg = WorkoutSessionMesg(mesg: mesg)
            self.workoutSessionMesgListeners.values.forEach { $0.onMesg(workoutSessionMesg) }
            return
        case .workoutStep:
            if (self.workoutStepMesgListeners.count == 0) {
                return
            }

            let workoutStepMesg = WorkoutStepMesg(mesg: mesg)
            self.workoutStepMesgListeners.values.forEach { $0.onMesg(workoutStepMesg) }
            return
        case .exerciseTitle:
            if (self.exerciseTitleMesgListeners.count == 0) {
                return
            }

            let exerciseTitleMesg = ExerciseTitleMesg(mesg: mesg)
            self.exerciseTitleMesgListeners.values.forEach { $0.onMesg(exerciseTitleMesg) }
            return
        case .schedule:
            if (self.scheduleMesgListeners.count == 0) {
                return
            }

            let scheduleMesg = ScheduleMesg(mesg: mesg)
            self.scheduleMesgListeners.values.forEach { $0.onMesg(scheduleMesg) }
            return
        case .totals:
            if (self.totalsMesgListeners.count == 0) {
                return
            }

            let totalsMesg = TotalsMesg(mesg: mesg)
            self.totalsMesgListeners.values.forEach { $0.onMesg(totalsMesg) }
            return
        case .weightScale:
            if (self.weightScaleMesgListeners.count == 0) {
                return
            }

            let weightScaleMesg = WeightScaleMesg(mesg: mesg)
            self.weightScaleMesgListeners.values.forEach { $0.onMesg(weightScaleMesg) }
            return
        case .bloodPressure:
            if (self.bloodPressureMesgListeners.count == 0) {
                return
            }

            let bloodPressureMesg = BloodPressureMesg(mesg: mesg)
            self.bloodPressureMesgListeners.values.forEach { $0.onMesg(bloodPressureMesg) }
            return
        case .monitoringInfo:
            if (self.monitoringInfoMesgListeners.count == 0) {
                return
            }

            let monitoringInfoMesg = MonitoringInfoMesg(mesg: mesg)
            self.monitoringInfoMesgListeners.values.forEach { $0.onMesg(monitoringInfoMesg) }
            return
        case .monitoring:
            if (self.monitoringMesgListeners.count == 0) {
                return
            }

            let monitoringMesg = MonitoringMesg(mesg: mesg)
            self.monitoringMesgListeners.values.forEach { $0.onMesg(monitoringMesg) }
            return
        case .monitoringHrData:
            if (self.monitoringHrDataMesgListeners.count == 0) {
                return
            }

            let monitoringHrDataMesg = MonitoringHrDataMesg(mesg: mesg)
            self.monitoringHrDataMesgListeners.values.forEach { $0.onMesg(monitoringHrDataMesg) }
            return
        case .spo2Data:
            if (self.spo2DataMesgListeners.count == 0) {
                return
            }

            let spo2DataMesg = Spo2DataMesg(mesg: mesg)
            self.spo2DataMesgListeners.values.forEach { $0.onMesg(spo2DataMesg) }
            return
        case .hr:
            if (self.hrMesgListeners.count == 0) {
                return
            }

            let hrMesg = HrMesg(mesg: mesg)
            self.hrMesgListeners.values.forEach { $0.onMesg(hrMesg) }
            return
        case .stressLevel:
            if (self.stressLevelMesgListeners.count == 0) {
                return
            }

            let stressLevelMesg = StressLevelMesg(mesg: mesg)
            self.stressLevelMesgListeners.values.forEach { $0.onMesg(stressLevelMesg) }
            return
        case .maxMetData:
            if (self.maxMetDataMesgListeners.count == 0) {
                return
            }

            let maxMetDataMesg = MaxMetDataMesg(mesg: mesg)
            self.maxMetDataMesgListeners.values.forEach { $0.onMesg(maxMetDataMesg) }
            return
        case .hsaBodyBatteryData:
            if (self.hsaBodyBatteryDataMesgListeners.count == 0) {
                return
            }

            let hsaBodyBatteryDataMesg = HsaBodyBatteryDataMesg(mesg: mesg)
            self.hsaBodyBatteryDataMesgListeners.values.forEach { $0.onMesg(hsaBodyBatteryDataMesg) }
            return
        case .hsaEvent:
            if (self.hsaEventMesgListeners.count == 0) {
                return
            }

            let hsaEventMesg = HsaEventMesg(mesg: mesg)
            self.hsaEventMesgListeners.values.forEach { $0.onMesg(hsaEventMesg) }
            return
        case .hsaAccelerometerData:
            if (self.hsaAccelerometerDataMesgListeners.count == 0) {
                return
            }

            let hsaAccelerometerDataMesg = HsaAccelerometerDataMesg(mesg: mesg)
            self.hsaAccelerometerDataMesgListeners.values.forEach { $0.onMesg(hsaAccelerometerDataMesg) }
            return
        case .hsaGyroscopeData:
            if (self.hsaGyroscopeDataMesgListeners.count == 0) {
                return
            }

            let hsaGyroscopeDataMesg = HsaGyroscopeDataMesg(mesg: mesg)
            self.hsaGyroscopeDataMesgListeners.values.forEach { $0.onMesg(hsaGyroscopeDataMesg) }
            return
        case .hsaStepData:
            if (self.hsaStepDataMesgListeners.count == 0) {
                return
            }

            let hsaStepDataMesg = HsaStepDataMesg(mesg: mesg)
            self.hsaStepDataMesgListeners.values.forEach { $0.onMesg(hsaStepDataMesg) }
            return
        case .hsaSpo2Data:
            if (self.hsaSpo2DataMesgListeners.count == 0) {
                return
            }

            let hsaSpo2DataMesg = HsaSpo2DataMesg(mesg: mesg)
            self.hsaSpo2DataMesgListeners.values.forEach { $0.onMesg(hsaSpo2DataMesg) }
            return
        case .hsaStressData:
            if (self.hsaStressDataMesgListeners.count == 0) {
                return
            }

            let hsaStressDataMesg = HsaStressDataMesg(mesg: mesg)
            self.hsaStressDataMesgListeners.values.forEach { $0.onMesg(hsaStressDataMesg) }
            return
        case .hsaRespirationData:
            if (self.hsaRespirationDataMesgListeners.count == 0) {
                return
            }

            let hsaRespirationDataMesg = HsaRespirationDataMesg(mesg: mesg)
            self.hsaRespirationDataMesgListeners.values.forEach { $0.onMesg(hsaRespirationDataMesg) }
            return
        case .hsaHeartRateData:
            if (self.hsaHeartRateDataMesgListeners.count == 0) {
                return
            }

            let hsaHeartRateDataMesg = HsaHeartRateDataMesg(mesg: mesg)
            self.hsaHeartRateDataMesgListeners.values.forEach { $0.onMesg(hsaHeartRateDataMesg) }
            return
        case .hsaConfigurationData:
            if (self.hsaConfigurationDataMesgListeners.count == 0) {
                return
            }

            let hsaConfigurationDataMesg = HsaConfigurationDataMesg(mesg: mesg)
            self.hsaConfigurationDataMesgListeners.values.forEach { $0.onMesg(hsaConfigurationDataMesg) }
            return
        case .hsaWristTemperatureData:
            if (self.hsaWristTemperatureDataMesgListeners.count == 0) {
                return
            }

            let hsaWristTemperatureDataMesg = HsaWristTemperatureDataMesg(mesg: mesg)
            self.hsaWristTemperatureDataMesgListeners.values.forEach { $0.onMesg(hsaWristTemperatureDataMesg) }
            return
        case .memoGlob:
            if (self.memoGlobMesgListeners.count == 0) {
                return
            }

            let memoGlobMesg = MemoGlobMesg(mesg: mesg)
            self.memoGlobMesgListeners.values.forEach { $0.onMesg(memoGlobMesg) }
            return
        case .sleepLevel:
            if (self.sleepLevelMesgListeners.count == 0) {
                return
            }

            let sleepLevelMesg = SleepLevelMesg(mesg: mesg)
            self.sleepLevelMesgListeners.values.forEach { $0.onMesg(sleepLevelMesg) }
            return
        case .antChannelId:
            if (self.antChannelIdMesgListeners.count == 0) {
                return
            }

            let antChannelIdMesg = AntChannelIdMesg(mesg: mesg)
            self.antChannelIdMesgListeners.values.forEach { $0.onMesg(antChannelIdMesg) }
            return
        case .antRx:
            if (self.antRxMesgListeners.count == 0) {
                return
            }

            let antRxMesg = AntRxMesg(mesg: mesg)
            self.antRxMesgListeners.values.forEach { $0.onMesg(antRxMesg) }
            return
        case .antTx:
            if (self.antTxMesgListeners.count == 0) {
                return
            }

            let antTxMesg = AntTxMesg(mesg: mesg)
            self.antTxMesgListeners.values.forEach { $0.onMesg(antTxMesg) }
            return
        case .exdScreenConfiguration:
            if (self.exdScreenConfigurationMesgListeners.count == 0) {
                return
            }

            let exdScreenConfigurationMesg = ExdScreenConfigurationMesg(mesg: mesg)
            self.exdScreenConfigurationMesgListeners.values.forEach { $0.onMesg(exdScreenConfigurationMesg) }
            return
        case .exdDataFieldConfiguration:
            if (self.exdDataFieldConfigurationMesgListeners.count == 0) {
                return
            }

            let exdDataFieldConfigurationMesg = ExdDataFieldConfigurationMesg(mesg: mesg)
            self.exdDataFieldConfigurationMesgListeners.values.forEach { $0.onMesg(exdDataFieldConfigurationMesg) }
            return
        case .exdDataConceptConfiguration:
            if (self.exdDataConceptConfigurationMesgListeners.count == 0) {
                return
            }

            let exdDataConceptConfigurationMesg = ExdDataConceptConfigurationMesg(mesg: mesg)
            self.exdDataConceptConfigurationMesgListeners.values.forEach { $0.onMesg(exdDataConceptConfigurationMesg) }
            return
        case .diveSummary:
            if (self.diveSummaryMesgListeners.count == 0) {
                return
            }

            let diveSummaryMesg = DiveSummaryMesg(mesg: mesg)
            self.diveSummaryMesgListeners.values.forEach { $0.onMesg(diveSummaryMesg) }
            return
        case .aadAccelFeatures:
            if (self.aadAccelFeaturesMesgListeners.count == 0) {
                return
            }

            let aadAccelFeaturesMesg = AadAccelFeaturesMesg(mesg: mesg)
            self.aadAccelFeaturesMesgListeners.values.forEach { $0.onMesg(aadAccelFeaturesMesg) }
            return
        case .hrv:
            if (self.hrvMesgListeners.count == 0) {
                return
            }

            let hrvMesg = HrvMesg(mesg: mesg)
            self.hrvMesgListeners.values.forEach { $0.onMesg(hrvMesg) }
            return
        case .beatIntervals:
            if (self.beatIntervalsMesgListeners.count == 0) {
                return
            }

            let beatIntervalsMesg = BeatIntervalsMesg(mesg: mesg)
            self.beatIntervalsMesgListeners.values.forEach { $0.onMesg(beatIntervalsMesg) }
            return
        case .hrvStatusSummary:
            if (self.hrvStatusSummaryMesgListeners.count == 0) {
                return
            }

            let hrvStatusSummaryMesg = HrvStatusSummaryMesg(mesg: mesg)
            self.hrvStatusSummaryMesgListeners.values.forEach { $0.onMesg(hrvStatusSummaryMesg) }
            return
        case .hrvValue:
            if (self.hrvValueMesgListeners.count == 0) {
                return
            }

            let hrvValueMesg = HrvValueMesg(mesg: mesg)
            self.hrvValueMesgListeners.values.forEach { $0.onMesg(hrvValueMesg) }
            return
        case .rawBbi:
            if (self.rawBbiMesgListeners.count == 0) {
                return
            }

            let rawBbiMesg = RawBbiMesg(mesg: mesg)
            self.rawBbiMesgListeners.values.forEach { $0.onMesg(rawBbiMesg) }
            return
        case .respirationRate:
            if (self.respirationRateMesgListeners.count == 0) {
                return
            }

            let respirationRateMesg = RespirationRateMesg(mesg: mesg)
            self.respirationRateMesgListeners.values.forEach { $0.onMesg(respirationRateMesg) }
            return
        case .chronoShotSession:
            if (self.chronoShotSessionMesgListeners.count == 0) {
                return
            }

            let chronoShotSessionMesg = ChronoShotSessionMesg(mesg: mesg)
            self.chronoShotSessionMesgListeners.values.forEach { $0.onMesg(chronoShotSessionMesg) }
            return
        case .chronoShotData:
            if (self.chronoShotDataMesgListeners.count == 0) {
                return
            }

            let chronoShotDataMesg = ChronoShotDataMesg(mesg: mesg)
            self.chronoShotDataMesgListeners.values.forEach { $0.onMesg(chronoShotDataMesg) }
            return
        case .tankUpdate:
            if (self.tankUpdateMesgListeners.count == 0) {
                return
            }

            let tankUpdateMesg = TankUpdateMesg(mesg: mesg)
            self.tankUpdateMesgListeners.values.forEach { $0.onMesg(tankUpdateMesg) }
            return
        case .tankSummary:
            if (self.tankSummaryMesgListeners.count == 0) {
                return
            }

            let tankSummaryMesg = TankSummaryMesg(mesg: mesg)
            self.tankSummaryMesgListeners.values.forEach { $0.onMesg(tankSummaryMesg) }
            return
        case .sleepAssessment:
            if (self.sleepAssessmentMesgListeners.count == 0) {
                return
            }

            let sleepAssessmentMesg = SleepAssessmentMesg(mesg: mesg)
            self.sleepAssessmentMesgListeners.values.forEach { $0.onMesg(sleepAssessmentMesg) }
            return
        case .skinTempOvernight:
            if (self.skinTempOvernightMesgListeners.count == 0) {
                return
            }

            let skinTempOvernightMesg = SkinTempOvernightMesg(mesg: mesg)
            self.skinTempOvernightMesgListeners.values.forEach { $0.onMesg(skinTempOvernightMesg) }
            return
        case .pad:
            if (self.padMesgListeners.count == 0) {
                return
            }

            let padMesg = PadMesg(mesg: mesg)
            self.padMesgListeners.values.forEach { $0.onMesg(padMesg) }
            return
        default:
            return
        }

    }
}
