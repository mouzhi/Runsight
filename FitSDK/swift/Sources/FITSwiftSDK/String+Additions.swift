/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


import Foundation

extension String {
    init<T:Any>(anyValue v: T) {
        let value: String
        switch v {
        case let binaryIntegerValue as any BinaryInteger:
            value = binaryIntegerValue.description
        case let binaryFloatingPointValue as any BinaryFloatingPoint:
            value = Double(binaryFloatingPointValue).description
        case let stringValue as String:
            value = stringValue
        default:
            fatalError()
        }
        
        self = value
    }
    
    func trimTrailingWhitespace() -> String {
        var newString = self

        while newString.last?.isWhitespace == true {
            newString = String(newString.dropLast())
        }

        return newString
    }
    
    func trimTrailingNullTerminators() -> String {
        var newString = self

        while newString.last == "\0" {
            newString = String(newString.dropLast())
        }

        return newString
    }
}
