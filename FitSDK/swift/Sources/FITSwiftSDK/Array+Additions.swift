/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


import Foundation

extension Array where Element == UInt8 {
    func toUuid() -> UUID? {
        if (self.count != 16) {
            return nil
        }
        
        return NSUUID(uuidBytes: self) as UUID
    }
}

extension Array where Element == UInt8? {
    func toUuid() -> UUID? {
        let bytes = self.compactMap { $0 }
        
        return bytes.toUuid()
    }
}

extension Array {
    subscript(safe index: Int) -> Element? {
        guard 0 <= index && index < count else {
            return nil
        }
        
        return self[index]
    }
}